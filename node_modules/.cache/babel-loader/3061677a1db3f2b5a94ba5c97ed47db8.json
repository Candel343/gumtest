{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cancelBid = exports.getAuctionExtended = exports.getBidderPotKey = exports.placeBid = exports.setAuctionAuthority = exports.startAuctionWithResource = exports.createAuction = exports.decodeAuctionData = exports.AUCTION_SCHEMA = exports.CreateAuctionArgs = exports.WinnerLimit = exports.WinnerLimitType = exports.BidderPot = exports.BIDDER_POT_LEN = exports.BidderMetadata = exports.BIDDER_METADATA_LEN = exports.AuctionData = exports.AuctionDataExtended = exports.PriceFloor = exports.PriceFloorType = exports.BASE_AUCTION_DATA_SIZE = exports.decodeBidderMetadata = exports.BidderMetadataParser = exports.decodeAuctionDataExtended = exports.AuctionDataExtendedParser = exports.decodeBidderPot = exports.BidderPotParser = exports.decodeAuction = exports.AuctionParser = exports.BidState = exports.Bid = exports.BidStateType = exports.AuctionState = exports.MAX_AUCTION_DATA_EXTENDED_SIZE = exports.EXTENDED = exports.METADATA = exports.AUCTION_PREFIX = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst programIds_1 = require(\"../utils/programIds\");\n\nconst borsh_1 = require(\"borsh\");\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst moment_1 = __importDefault(require(\"moment\"));\n\nconst utils_1 = require(\"../utils\");\n\nexports.AUCTION_PREFIX = 'auction';\nexports.METADATA = 'metadata';\nexports.EXTENDED = 'extended';\nexports.MAX_AUCTION_DATA_EXTENDED_SIZE = 8 + 9 + 2 + 9 + 33 + 158;\nvar AuctionState;\n\n(function (AuctionState) {\n  AuctionState[AuctionState[\"Created\"] = 0] = \"Created\";\n  AuctionState[AuctionState[\"Started\"] = 1] = \"Started\";\n  AuctionState[AuctionState[\"Ended\"] = 2] = \"Ended\";\n})(AuctionState = exports.AuctionState || (exports.AuctionState = {}));\n\nvar BidStateType;\n\n(function (BidStateType) {\n  BidStateType[BidStateType[\"EnglishAuction\"] = 0] = \"EnglishAuction\";\n  BidStateType[BidStateType[\"OpenEdition\"] = 1] = \"OpenEdition\";\n})(BidStateType = exports.BidStateType || (exports.BidStateType = {}));\n\nclass Bid {\n  constructor(args) {\n    this.key = args.key;\n    this.amount = args.amount;\n  }\n\n}\n\nexports.Bid = Bid;\n\nclass BidState {\n  constructor(args) {\n    this.type = args.type;\n    this.bids = args.bids;\n    this.max = args.max;\n  }\n\n  getWinnerAt(winnerIndex) {\n    const convertedIndex = this.bids.length - winnerIndex - 1;\n\n    if (convertedIndex >= 0 && convertedIndex < this.bids.length) {\n      return this.bids[convertedIndex].key;\n    } else {\n      return null;\n    }\n  }\n\n  getAmountAt(winnerIndex) {\n    const convertedIndex = this.bids.length - winnerIndex - 1;\n\n    if (convertedIndex >= 0 && convertedIndex < this.bids.length) {\n      return this.bids[convertedIndex].amount;\n    } else {\n      return null;\n    }\n  }\n\n  getWinnerIndex(bidder) {\n    if (!this.bids) return null;\n    const index = this.bids.findIndex(b => b.key === bidder); // auction stores data in reverse order\n\n    if (index !== -1) {\n      const zeroBased = this.bids.length - index - 1;\n      return zeroBased < this.max.toNumber() ? zeroBased : null;\n    } else return null;\n  }\n\n}\n\nexports.BidState = BidState;\n\nconst AuctionParser = (pubkey, account) => ({\n  pubkey,\n  account,\n  info: exports.decodeAuction(account.data)\n});\n\nexports.AuctionParser = AuctionParser;\n\nconst decodeAuction = buffer => {\n  return borsh_1.deserializeUnchecked(exports.AUCTION_SCHEMA, AuctionData, buffer);\n};\n\nexports.decodeAuction = decodeAuction;\n\nconst BidderPotParser = (pubkey, account) => ({\n  pubkey,\n  account,\n  info: exports.decodeBidderPot(account.data)\n});\n\nexports.BidderPotParser = BidderPotParser;\n\nconst decodeBidderPot = buffer => {\n  return borsh_1.deserializeUnchecked(exports.AUCTION_SCHEMA, BidderPot, buffer);\n};\n\nexports.decodeBidderPot = decodeBidderPot;\n\nconst AuctionDataExtendedParser = (pubkey, account) => ({\n  pubkey,\n  account,\n  info: exports.decodeAuctionDataExtended(account.data)\n});\n\nexports.AuctionDataExtendedParser = AuctionDataExtendedParser;\n\nconst decodeAuctionDataExtended = buffer => {\n  return borsh_1.deserializeUnchecked(exports.AUCTION_SCHEMA, AuctionDataExtended, buffer);\n};\n\nexports.decodeAuctionDataExtended = decodeAuctionDataExtended;\n\nconst BidderMetadataParser = (pubkey, account) => ({\n  pubkey,\n  account,\n  info: exports.decodeBidderMetadata(account.data)\n});\n\nexports.BidderMetadataParser = BidderMetadataParser;\n\nconst decodeBidderMetadata = buffer => {\n  return borsh_1.deserializeUnchecked(exports.AUCTION_SCHEMA, BidderMetadata, buffer);\n};\n\nexports.decodeBidderMetadata = decodeBidderMetadata;\nexports.BASE_AUCTION_DATA_SIZE = 32 + 32 + 32 + 9 + 9 + 9 + 9 + 1 + 32 + 1 + 8 + 8;\nvar PriceFloorType;\n\n(function (PriceFloorType) {\n  PriceFloorType[PriceFloorType[\"None\"] = 0] = \"None\";\n  PriceFloorType[PriceFloorType[\"Minimum\"] = 1] = \"Minimum\";\n  PriceFloorType[PriceFloorType[\"BlindedPrice\"] = 2] = \"BlindedPrice\";\n})(PriceFloorType = exports.PriceFloorType || (exports.PriceFloorType = {}));\n\nclass PriceFloor {\n  constructor(args) {\n    this.type = args.type;\n    this.hash = args.hash || new Uint8Array(32);\n\n    if (this.type === PriceFloorType.Minimum) {\n      if (args.minPrice) {\n        this.hash.set(args.minPrice.toArrayLike(Buffer, 'le', 8), 0);\n      } else {\n        this.minPrice = new bn_js_1.default((args.hash || new Uint8Array(0)).slice(0, 8), 'le');\n      }\n    }\n  }\n\n}\n\nexports.PriceFloor = PriceFloor;\n\nclass AuctionDataExtended {\n  constructor(args) {\n    this.totalUncancelledBids = args.totalUncancelledBids;\n    this.tickSize = args.tickSize;\n    this.gapTickSizePercentage = args.gapTickSizePercentage;\n    this.instantSalePrice = args.instantSalePrice;\n    this.name = args.name;\n  }\n\n}\n\nexports.AuctionDataExtended = AuctionDataExtended;\n\nclass AuctionData {\n  constructor(args) {\n    this.authority = args.authority;\n    this.tokenMint = args.tokenMint;\n    this.lastBid = args.lastBid;\n    this.endedAt = args.endedAt;\n    this.endAuctionAt = args.endAuctionAt;\n    this.auctionGap = args.auctionGap;\n    this.priceFloor = args.priceFloor;\n    this.state = args.state;\n    this.bidState = args.bidState;\n  }\n\n  timeToEnd() {\n    var _a;\n\n    const now = moment_1.default().unix();\n    const ended = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n    let endAt = ((_a = this.endedAt) === null || _a === void 0 ? void 0 : _a.toNumber()) || 0;\n\n    if (this.auctionGap && this.lastBid) {\n      endAt = Math.max(endAt, this.auctionGap.toNumber() + this.lastBid.toNumber());\n    }\n\n    let delta = endAt - now;\n    if (!endAt || delta <= 0) return ended;\n    const days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n    const hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600;\n    const minutes = Math.floor(delta / 60) % 60;\n    delta -= minutes * 60;\n    const seconds = Math.floor(delta % 60);\n    return {\n      days,\n      hours,\n      minutes,\n      seconds\n    };\n  }\n\n  ended() {\n    const now = moment_1.default().unix();\n    if (!this.endedAt) return false;\n    if (this.endedAt.toNumber() > now) return false;\n\n    if (this.endedAt.toNumber() < now) {\n      if (this.auctionGap && this.lastBid) {\n        const newEnding = this.auctionGap.toNumber() + this.lastBid.toNumber();\n        return newEnding < now;\n      } else return true;\n    }\n  }\n\n}\n\nexports.AuctionData = AuctionData;\nexports.BIDDER_METADATA_LEN = 32 + 32 + 8 + 8 + 1;\n\nclass BidderMetadata {\n  constructor(args) {\n    this.bidderPubkey = args.bidderPubkey;\n    this.auctionPubkey = args.auctionPubkey;\n    this.lastBid = args.lastBid;\n    this.lastBidTimestamp = args.lastBidTimestamp;\n    this.cancelled = args.cancelled;\n  }\n\n}\n\nexports.BidderMetadata = BidderMetadata;\nexports.BIDDER_POT_LEN = 32 + 32 + 32 + 1;\n\nclass BidderPot {\n  constructor(args) {\n    this.bidderPot = args.bidderPot;\n    this.bidderAct = args.bidderAct;\n    this.auctionAct = args.auctionAct;\n    this.emptied = args.emptied;\n  }\n\n}\n\nexports.BidderPot = BidderPot;\nvar WinnerLimitType;\n\n(function (WinnerLimitType) {\n  WinnerLimitType[WinnerLimitType[\"Unlimited\"] = 0] = \"Unlimited\";\n  WinnerLimitType[WinnerLimitType[\"Capped\"] = 1] = \"Capped\";\n})(WinnerLimitType = exports.WinnerLimitType || (exports.WinnerLimitType = {}));\n\nclass WinnerLimit {\n  constructor(args) {\n    this.type = args.type;\n    this.usize = args.usize;\n  }\n\n}\n\nexports.WinnerLimit = WinnerLimit;\n\nclass CreateAuctionArgs {\n  constructor(args) {\n    this.instruction = 7;\n    this.winners = args.winners;\n    this.endAuctionAt = args.endAuctionAt;\n    this.auctionGap = args.auctionGap;\n    this.tokenMint = args.tokenMint;\n    this.authority = args.authority;\n    this.resource = args.resource;\n    this.priceFloor = args.priceFloor;\n    this.tickSize = args.tickSize;\n    this.gapTickSizePercentage = args.gapTickSizePercentage;\n    this.name = args.name;\n    this.instantSalePrice = args.instantSalePrice;\n  }\n\n}\n\nexports.CreateAuctionArgs = CreateAuctionArgs;\n\nclass StartAuctionArgs {\n  constructor(args) {\n    this.instruction = 4;\n    this.resource = args.resource;\n  }\n\n}\n\nclass PlaceBidArgs {\n  constructor(args) {\n    this.instruction = 6;\n    this.resource = args.resource;\n    this.amount = args.amount;\n  }\n\n}\n\nclass CancelBidArgs {\n  constructor(args) {\n    this.instruction = 0;\n    this.resource = args.resource;\n  }\n\n}\n\nclass SetAuthorityArgs {\n  constructor() {\n    this.instruction = 5;\n  }\n\n}\n\nexports.AUCTION_SCHEMA = new Map([[CreateAuctionArgs, {\n  kind: 'struct',\n  fields: [['instruction', 'u8'], ['winners', WinnerLimit], ['endAuctionAt', {\n    kind: 'option',\n    type: 'u64'\n  }], ['auctionGap', {\n    kind: 'option',\n    type: 'u64'\n  }], ['tokenMint', 'pubkeyAsString'], ['authority', 'pubkeyAsString'], ['resource', 'pubkeyAsString'], ['priceFloor', PriceFloor], ['tickSize', {\n    kind: 'option',\n    type: 'u64'\n  }], ['gapTickSizePercentage', {\n    kind: 'option',\n    type: 'u8'\n  }], ['instantSalePrice', {\n    kind: 'option',\n    type: 'u64'\n  }], ['name', {\n    kind: 'option',\n    type: [32]\n  }]]\n}], [WinnerLimit, {\n  kind: 'struct',\n  fields: [['type', 'u8'], ['usize', 'u64']]\n}], [StartAuctionArgs, {\n  kind: 'struct',\n  fields: [['instruction', 'u8'], ['resource', 'pubkeyAsString']]\n}], [PlaceBidArgs, {\n  kind: 'struct',\n  fields: [['instruction', 'u8'], ['amount', 'u64'], ['resource', 'pubkeyAsString']]\n}], [CancelBidArgs, {\n  kind: 'struct',\n  fields: [['instruction', 'u8'], ['resource', 'pubkeyAsString']]\n}], [SetAuthorityArgs, {\n  kind: 'struct',\n  fields: [['instruction', 'u8']]\n}], [AuctionData, {\n  kind: 'struct',\n  fields: [['authority', 'pubkeyAsString'], ['tokenMint', 'pubkeyAsString'], ['lastBid', {\n    kind: 'option',\n    type: 'u64'\n  }], ['endedAt', {\n    kind: 'option',\n    type: 'u64'\n  }], ['endAuctionAt', {\n    kind: 'option',\n    type: 'u64'\n  }], ['auctionGap', {\n    kind: 'option',\n    type: 'u64'\n  }], ['priceFloor', PriceFloor], ['state', 'u8'], ['bidState', BidState]]\n}], [AuctionDataExtended, {\n  kind: 'struct',\n  fields: [['totalUncancelledBids', 'u64'], ['tickSize', {\n    kind: 'option',\n    type: 'u64'\n  }], ['gapTickSizePercentage', {\n    kind: 'option',\n    type: 'u8'\n  }], ['instantSalePrice', {\n    kind: 'option',\n    type: 'u64'\n  }], ['name', {\n    kind: 'option',\n    type: [32]\n  }]]\n}], [PriceFloor, {\n  kind: 'struct',\n  fields: [['type', 'u8'], ['hash', [32]]]\n}], [BidState, {\n  kind: 'struct',\n  fields: [['type', 'u8'], ['bids', [Bid]], ['max', 'u64']]\n}], [Bid, {\n  kind: 'struct',\n  fields: [['key', 'pubkeyAsString'], ['amount', 'u64']]\n}], [BidderMetadata, {\n  kind: 'struct',\n  fields: [['bidderPubkey', 'pubkeyAsString'], ['auctionPubkey', 'pubkeyAsString'], ['lastBid', 'u64'], ['lastBidTimestamp', 'u64'], ['cancelled', 'u8']]\n}], [BidderPot, {\n  kind: 'struct',\n  fields: [['bidderPot', 'pubkeyAsString'], ['bidderAct', 'pubkeyAsString'], ['auctionAct', 'pubkeyAsString'], ['emptied', 'u8']]\n}]]);\n\nconst decodeAuctionData = buffer => {\n  return borsh_1.deserializeUnchecked(exports.AUCTION_SCHEMA, AuctionData, buffer);\n};\n\nexports.decodeAuctionData = decodeAuctionData;\n\nasync function createAuction(settings, creator, instructions) {\n  const auctionProgramId = programIds_1.programIds().auction;\n  const data = Buffer.from(borsh_1.serialize(exports.AUCTION_SCHEMA, settings));\n  const auctionKey = (await utils_1.findProgramAddress([Buffer.from(exports.AUCTION_PREFIX), utils_1.toPublicKey(auctionProgramId).toBuffer(), utils_1.toPublicKey(settings.resource).toBuffer()], utils_1.toPublicKey(auctionProgramId)))[0];\n  const keys = [{\n    pubkey: utils_1.toPublicKey(creator),\n    isSigner: true,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(auctionKey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(await getAuctionExtended({\n      auctionProgramId,\n      resource: settings.resource\n    })),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: web3_js_1.SystemProgram.programId,\n    isSigner: false,\n    isWritable: false\n  }];\n  instructions.push(new web3_js_1.TransactionInstruction({\n    keys,\n    programId: utils_1.toPublicKey(auctionProgramId),\n    data: data\n  }));\n}\n\nexports.createAuction = createAuction;\n\nasync function startAuctionWithResource(resource, creator, instructions) {\n  const auctionProgramId = programIds_1.programIds().auction;\n  const data = Buffer.from(borsh_1.serialize(exports.AUCTION_SCHEMA, new StartAuctionArgs({\n    resource\n  })));\n  const auctionKey = (await utils_1.findProgramAddress([Buffer.from(exports.AUCTION_PREFIX), utils_1.toPublicKey(auctionProgramId).toBuffer(), utils_1.toPublicKey(resource).toBuffer()], utils_1.toPublicKey(auctionProgramId)))[0];\n  const keys = [{\n    pubkey: utils_1.toPublicKey(creator),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(auctionKey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n    isSigner: false,\n    isWritable: false\n  }];\n  instructions.push(new web3_js_1.TransactionInstruction({\n    keys,\n    programId: utils_1.toPublicKey(auctionProgramId),\n    data: data\n  }));\n}\n\nexports.startAuctionWithResource = startAuctionWithResource;\n\nasync function setAuctionAuthority(auction, currentAuthority, newAuthority, instructions) {\n  const auctionProgramId = programIds_1.programIds().auction;\n  const data = Buffer.from(borsh_1.serialize(exports.AUCTION_SCHEMA, new SetAuthorityArgs()));\n  const keys = [{\n    pubkey: utils_1.toPublicKey(auction),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(currentAuthority),\n    isSigner: true,\n    isWritable: false\n  }, {\n    pubkey: utils_1.toPublicKey(newAuthority),\n    isSigner: false,\n    isWritable: false\n  }];\n  instructions.push(new web3_js_1.TransactionInstruction({\n    keys,\n    programId: utils_1.toPublicKey(auctionProgramId),\n    data: data\n  }));\n}\n\nexports.setAuctionAuthority = setAuctionAuthority;\n\nasync function placeBid(bidderPubkey, bidderTokenPubkey, bidderPotTokenPubkey, tokenMintPubkey, transferAuthority, payer, resource, amount, instructions) {\n  const auctionProgramId = programIds_1.programIds().auction;\n  const data = Buffer.from(borsh_1.serialize(exports.AUCTION_SCHEMA, new PlaceBidArgs({\n    resource,\n    amount\n  })));\n  const auctionKey = (await utils_1.findProgramAddress([Buffer.from(exports.AUCTION_PREFIX), utils_1.toPublicKey(auctionProgramId).toBuffer(), utils_1.toPublicKey(resource).toBuffer()], utils_1.toPublicKey(auctionProgramId)))[0];\n  const bidderPotKey = await getBidderPotKey({\n    auctionProgramId,\n    auctionKey,\n    bidderPubkey\n  });\n  const bidderMetaKey = (await utils_1.findProgramAddress([Buffer.from(exports.AUCTION_PREFIX), utils_1.toPublicKey(auctionProgramId).toBuffer(), utils_1.toPublicKey(auctionKey).toBuffer(), utils_1.toPublicKey(bidderPubkey).toBuffer(), Buffer.from('metadata')], utils_1.toPublicKey(auctionProgramId)))[0];\n  const keys = [{\n    pubkey: utils_1.toPublicKey(bidderPubkey),\n    isSigner: true,\n    isWritable: false\n  }, {\n    pubkey: utils_1.toPublicKey(bidderTokenPubkey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(bidderPotKey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(bidderPotTokenPubkey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(bidderMetaKey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(auctionKey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(await getAuctionExtended({\n      auctionProgramId,\n      resource\n    })),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(tokenMintPubkey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(transferAuthority),\n    isSigner: true,\n    isWritable: false\n  }, {\n    pubkey: utils_1.toPublicKey(payer),\n    isSigner: true,\n    isWritable: false\n  }, {\n    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: web3_js_1.SystemProgram.programId,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: programIds_1.programIds().token,\n    isSigner: false,\n    isWritable: false\n  }];\n  instructions.push(new web3_js_1.TransactionInstruction({\n    keys,\n    programId: utils_1.toPublicKey(auctionProgramId),\n    data: data\n  }));\n  return {\n    amount\n  };\n}\n\nexports.placeBid = placeBid;\n\nasync function getBidderPotKey({\n  auctionProgramId,\n  auctionKey,\n  bidderPubkey\n}) {\n  return (await utils_1.findProgramAddress([Buffer.from(exports.AUCTION_PREFIX), utils_1.toPublicKey(auctionProgramId).toBuffer(), utils_1.toPublicKey(auctionKey).toBuffer(), utils_1.toPublicKey(bidderPubkey).toBuffer()], utils_1.toPublicKey(auctionProgramId)))[0];\n}\n\nexports.getBidderPotKey = getBidderPotKey;\n\nasync function getAuctionExtended({\n  auctionProgramId,\n  resource\n}) {\n  return (await utils_1.findProgramAddress([Buffer.from(exports.AUCTION_PREFIX), utils_1.toPublicKey(auctionProgramId).toBuffer(), utils_1.toPublicKey(resource).toBuffer(), Buffer.from(exports.EXTENDED)], utils_1.toPublicKey(auctionProgramId)))[0];\n}\n\nexports.getAuctionExtended = getAuctionExtended;\n\nasync function cancelBid(bidderPubkey, bidderTokenPubkey, bidderPotTokenPubkey, tokenMintPubkey, resource, instructions) {\n  const auctionProgramId = programIds_1.programIds().auction;\n  const data = Buffer.from(borsh_1.serialize(exports.AUCTION_SCHEMA, new CancelBidArgs({\n    resource\n  })));\n  const auctionKey = (await utils_1.findProgramAddress([Buffer.from(exports.AUCTION_PREFIX), utils_1.toPublicKey(auctionProgramId).toBuffer(), utils_1.toPublicKey(resource).toBuffer()], utils_1.toPublicKey(auctionProgramId)))[0];\n  const bidderPotKey = await getBidderPotKey({\n    auctionProgramId,\n    auctionKey,\n    bidderPubkey\n  });\n  const bidderMetaKey = (await utils_1.findProgramAddress([Buffer.from(exports.AUCTION_PREFIX), utils_1.toPublicKey(auctionProgramId).toBuffer(), utils_1.toPublicKey(auctionKey).toBuffer(), utils_1.toPublicKey(bidderPubkey).toBuffer(), Buffer.from('metadata')], utils_1.toPublicKey(auctionProgramId)))[0];\n  const keys = [{\n    pubkey: utils_1.toPublicKey(bidderPubkey),\n    isSigner: true,\n    isWritable: false\n  }, {\n    pubkey: utils_1.toPublicKey(bidderTokenPubkey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(bidderPotKey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(bidderPotTokenPubkey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(bidderMetaKey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(auctionKey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(await getAuctionExtended({\n      auctionProgramId,\n      resource\n    })),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(tokenMintPubkey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: web3_js_1.SystemProgram.programId,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: programIds_1.programIds().token,\n    isSigner: false,\n    isWritable: false\n  }];\n  instructions.push(new web3_js_1.TransactionInstruction({\n    keys,\n    programId: utils_1.toPublicKey(auctionProgramId),\n    data: data\n  }));\n}\n\nexports.cancelBid = cancelBid;","map":{"version":3,"sources":["../../../src/actions/auction.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.cancelBid = exports.getAuctionExtended = exports.getBidderPotKey = exports.placeBid = exports.setAuctionAuthority = exports.startAuctionWithResource = exports.createAuction = exports.decodeAuctionData = exports.AUCTION_SCHEMA = exports.CreateAuctionArgs = exports.WinnerLimit = exports.WinnerLimitType = exports.BidderPot = exports.BIDDER_POT_LEN = exports.BidderMetadata = exports.BIDDER_METADATA_LEN = exports.AuctionData = exports.AuctionDataExtended = exports.PriceFloor = exports.PriceFloorType = exports.BASE_AUCTION_DATA_SIZE = exports.decodeBidderMetadata = exports.BidderMetadataParser = exports.decodeAuctionDataExtended = exports.AuctionDataExtendedParser = exports.decodeBidderPot = exports.BidderPotParser = exports.decodeAuction = exports.AuctionParser = exports.BidState = exports.Bid = exports.BidStateType = exports.AuctionState = exports.MAX_AUCTION_DATA_EXTENDED_SIZE = exports.EXTENDED = exports.METADATA = exports.AUCTION_PREFIX = void 0;\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nconst programIds_1 = require(\"../utils/programIds\");\r\nconst borsh_1 = require(\"borsh\");\r\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\r\nconst moment_1 = __importDefault(require(\"moment\"));\r\nconst utils_1 = require(\"../utils\");\r\nexports.AUCTION_PREFIX = 'auction';\r\nexports.METADATA = 'metadata';\r\nexports.EXTENDED = 'extended';\r\nexports.MAX_AUCTION_DATA_EXTENDED_SIZE = 8 + 9 + 2 + 9 + 33 + 158;\r\nvar AuctionState;\r\n(function (AuctionState) {\r\n    AuctionState[AuctionState[\"Created\"] = 0] = \"Created\";\r\n    AuctionState[AuctionState[\"Started\"] = 1] = \"Started\";\r\n    AuctionState[AuctionState[\"Ended\"] = 2] = \"Ended\";\r\n})(AuctionState = exports.AuctionState || (exports.AuctionState = {}));\r\nvar BidStateType;\r\n(function (BidStateType) {\r\n    BidStateType[BidStateType[\"EnglishAuction\"] = 0] = \"EnglishAuction\";\r\n    BidStateType[BidStateType[\"OpenEdition\"] = 1] = \"OpenEdition\";\r\n})(BidStateType = exports.BidStateType || (exports.BidStateType = {}));\r\nclass Bid {\r\n    constructor(args) {\r\n        this.key = args.key;\r\n        this.amount = args.amount;\r\n    }\r\n}\r\nexports.Bid = Bid;\r\nclass BidState {\r\n    constructor(args) {\r\n        this.type = args.type;\r\n        this.bids = args.bids;\r\n        this.max = args.max;\r\n    }\r\n    getWinnerAt(winnerIndex) {\r\n        const convertedIndex = this.bids.length - winnerIndex - 1;\r\n        if (convertedIndex >= 0 && convertedIndex < this.bids.length) {\r\n            return this.bids[convertedIndex].key;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    getAmountAt(winnerIndex) {\r\n        const convertedIndex = this.bids.length - winnerIndex - 1;\r\n        if (convertedIndex >= 0 && convertedIndex < this.bids.length) {\r\n            return this.bids[convertedIndex].amount;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    getWinnerIndex(bidder) {\r\n        if (!this.bids)\r\n            return null;\r\n        const index = this.bids.findIndex(b => b.key === bidder);\r\n        // auction stores data in reverse order\r\n        if (index !== -1) {\r\n            const zeroBased = this.bids.length - index - 1;\r\n            return zeroBased < this.max.toNumber() ? zeroBased : null;\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n}\r\nexports.BidState = BidState;\r\nconst AuctionParser = (pubkey, account) => ({\r\n    pubkey,\r\n    account,\r\n    info: exports.decodeAuction(account.data),\r\n});\r\nexports.AuctionParser = AuctionParser;\r\nconst decodeAuction = (buffer) => {\r\n    return borsh_1.deserializeUnchecked(exports.AUCTION_SCHEMA, AuctionData, buffer);\r\n};\r\nexports.decodeAuction = decodeAuction;\r\nconst BidderPotParser = (pubkey, account) => ({\r\n    pubkey,\r\n    account,\r\n    info: exports.decodeBidderPot(account.data),\r\n});\r\nexports.BidderPotParser = BidderPotParser;\r\nconst decodeBidderPot = (buffer) => {\r\n    return borsh_1.deserializeUnchecked(exports.AUCTION_SCHEMA, BidderPot, buffer);\r\n};\r\nexports.decodeBidderPot = decodeBidderPot;\r\nconst AuctionDataExtendedParser = (pubkey, account) => ({\r\n    pubkey,\r\n    account,\r\n    info: exports.decodeAuctionDataExtended(account.data),\r\n});\r\nexports.AuctionDataExtendedParser = AuctionDataExtendedParser;\r\nconst decodeAuctionDataExtended = (buffer) => {\r\n    return borsh_1.deserializeUnchecked(exports.AUCTION_SCHEMA, AuctionDataExtended, buffer);\r\n};\r\nexports.decodeAuctionDataExtended = decodeAuctionDataExtended;\r\nconst BidderMetadataParser = (pubkey, account) => ({\r\n    pubkey,\r\n    account,\r\n    info: exports.decodeBidderMetadata(account.data),\r\n});\r\nexports.BidderMetadataParser = BidderMetadataParser;\r\nconst decodeBidderMetadata = (buffer) => {\r\n    return borsh_1.deserializeUnchecked(exports.AUCTION_SCHEMA, BidderMetadata, buffer);\r\n};\r\nexports.decodeBidderMetadata = decodeBidderMetadata;\r\nexports.BASE_AUCTION_DATA_SIZE = 32 + 32 + 32 + 9 + 9 + 9 + 9 + 1 + 32 + 1 + 8 + 8;\r\nvar PriceFloorType;\r\n(function (PriceFloorType) {\r\n    PriceFloorType[PriceFloorType[\"None\"] = 0] = \"None\";\r\n    PriceFloorType[PriceFloorType[\"Minimum\"] = 1] = \"Minimum\";\r\n    PriceFloorType[PriceFloorType[\"BlindedPrice\"] = 2] = \"BlindedPrice\";\r\n})(PriceFloorType = exports.PriceFloorType || (exports.PriceFloorType = {}));\r\nclass PriceFloor {\r\n    constructor(args) {\r\n        this.type = args.type;\r\n        this.hash = args.hash || new Uint8Array(32);\r\n        if (this.type === PriceFloorType.Minimum) {\r\n            if (args.minPrice) {\r\n                this.hash.set(args.minPrice.toArrayLike(Buffer, 'le', 8), 0);\r\n            }\r\n            else {\r\n                this.minPrice = new bn_js_1.default((args.hash || new Uint8Array(0)).slice(0, 8), 'le');\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.PriceFloor = PriceFloor;\r\nclass AuctionDataExtended {\r\n    constructor(args) {\r\n        this.totalUncancelledBids = args.totalUncancelledBids;\r\n        this.tickSize = args.tickSize;\r\n        this.gapTickSizePercentage = args.gapTickSizePercentage;\r\n        this.instantSalePrice = args.instantSalePrice;\r\n        this.name = args.name;\r\n    }\r\n}\r\nexports.AuctionDataExtended = AuctionDataExtended;\r\nclass AuctionData {\r\n    constructor(args) {\r\n        this.authority = args.authority;\r\n        this.tokenMint = args.tokenMint;\r\n        this.lastBid = args.lastBid;\r\n        this.endedAt = args.endedAt;\r\n        this.endAuctionAt = args.endAuctionAt;\r\n        this.auctionGap = args.auctionGap;\r\n        this.priceFloor = args.priceFloor;\r\n        this.state = args.state;\r\n        this.bidState = args.bidState;\r\n    }\r\n    timeToEnd() {\r\n        var _a;\r\n        const now = moment_1.default().unix();\r\n        const ended = { days: 0, hours: 0, minutes: 0, seconds: 0 };\r\n        let endAt = ((_a = this.endedAt) === null || _a === void 0 ? void 0 : _a.toNumber()) || 0;\r\n        if (this.auctionGap && this.lastBid) {\r\n            endAt = Math.max(endAt, this.auctionGap.toNumber() + this.lastBid.toNumber());\r\n        }\r\n        let delta = endAt - now;\r\n        if (!endAt || delta <= 0)\r\n            return ended;\r\n        const days = Math.floor(delta / 86400);\r\n        delta -= days * 86400;\r\n        const hours = Math.floor(delta / 3600) % 24;\r\n        delta -= hours * 3600;\r\n        const minutes = Math.floor(delta / 60) % 60;\r\n        delta -= minutes * 60;\r\n        const seconds = Math.floor(delta % 60);\r\n        return { days, hours, minutes, seconds };\r\n    }\r\n    ended() {\r\n        const now = moment_1.default().unix();\r\n        if (!this.endedAt)\r\n            return false;\r\n        if (this.endedAt.toNumber() > now)\r\n            return false;\r\n        if (this.endedAt.toNumber() < now) {\r\n            if (this.auctionGap && this.lastBid) {\r\n                const newEnding = this.auctionGap.toNumber() + this.lastBid.toNumber();\r\n                return newEnding < now;\r\n            }\r\n            else\r\n                return true;\r\n        }\r\n    }\r\n}\r\nexports.AuctionData = AuctionData;\r\nexports.BIDDER_METADATA_LEN = 32 + 32 + 8 + 8 + 1;\r\nclass BidderMetadata {\r\n    constructor(args) {\r\n        this.bidderPubkey = args.bidderPubkey;\r\n        this.auctionPubkey = args.auctionPubkey;\r\n        this.lastBid = args.lastBid;\r\n        this.lastBidTimestamp = args.lastBidTimestamp;\r\n        this.cancelled = args.cancelled;\r\n    }\r\n}\r\nexports.BidderMetadata = BidderMetadata;\r\nexports.BIDDER_POT_LEN = 32 + 32 + 32 + 1;\r\nclass BidderPot {\r\n    constructor(args) {\r\n        this.bidderPot = args.bidderPot;\r\n        this.bidderAct = args.bidderAct;\r\n        this.auctionAct = args.auctionAct;\r\n        this.emptied = args.emptied;\r\n    }\r\n}\r\nexports.BidderPot = BidderPot;\r\nvar WinnerLimitType;\r\n(function (WinnerLimitType) {\r\n    WinnerLimitType[WinnerLimitType[\"Unlimited\"] = 0] = \"Unlimited\";\r\n    WinnerLimitType[WinnerLimitType[\"Capped\"] = 1] = \"Capped\";\r\n})(WinnerLimitType = exports.WinnerLimitType || (exports.WinnerLimitType = {}));\r\nclass WinnerLimit {\r\n    constructor(args) {\r\n        this.type = args.type;\r\n        this.usize = args.usize;\r\n    }\r\n}\r\nexports.WinnerLimit = WinnerLimit;\r\nclass CreateAuctionArgs {\r\n    constructor(args) {\r\n        this.instruction = 7;\r\n        this.winners = args.winners;\r\n        this.endAuctionAt = args.endAuctionAt;\r\n        this.auctionGap = args.auctionGap;\r\n        this.tokenMint = args.tokenMint;\r\n        this.authority = args.authority;\r\n        this.resource = args.resource;\r\n        this.priceFloor = args.priceFloor;\r\n        this.tickSize = args.tickSize;\r\n        this.gapTickSizePercentage = args.gapTickSizePercentage;\r\n        this.name = args.name;\r\n        this.instantSalePrice = args.instantSalePrice;\r\n    }\r\n}\r\nexports.CreateAuctionArgs = CreateAuctionArgs;\r\nclass StartAuctionArgs {\r\n    constructor(args) {\r\n        this.instruction = 4;\r\n        this.resource = args.resource;\r\n    }\r\n}\r\nclass PlaceBidArgs {\r\n    constructor(args) {\r\n        this.instruction = 6;\r\n        this.resource = args.resource;\r\n        this.amount = args.amount;\r\n    }\r\n}\r\nclass CancelBidArgs {\r\n    constructor(args) {\r\n        this.instruction = 0;\r\n        this.resource = args.resource;\r\n    }\r\n}\r\nclass SetAuthorityArgs {\r\n    constructor() {\r\n        this.instruction = 5;\r\n    }\r\n}\r\nexports.AUCTION_SCHEMA = new Map([\r\n    [\r\n        CreateAuctionArgs,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['instruction', 'u8'],\r\n                ['winners', WinnerLimit],\r\n                ['endAuctionAt', { kind: 'option', type: 'u64' }],\r\n                ['auctionGap', { kind: 'option', type: 'u64' }],\r\n                ['tokenMint', 'pubkeyAsString'],\r\n                ['authority', 'pubkeyAsString'],\r\n                ['resource', 'pubkeyAsString'],\r\n                ['priceFloor', PriceFloor],\r\n                ['tickSize', { kind: 'option', type: 'u64' }],\r\n                ['gapTickSizePercentage', { kind: 'option', type: 'u8' }],\r\n                ['instantSalePrice', { kind: 'option', type: 'u64' }],\r\n                ['name', { kind: 'option', type: [32] }],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        WinnerLimit,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['type', 'u8'],\r\n                ['usize', 'u64'],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        StartAuctionArgs,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['instruction', 'u8'],\r\n                ['resource', 'pubkeyAsString'],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        PlaceBidArgs,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['instruction', 'u8'],\r\n                ['amount', 'u64'],\r\n                ['resource', 'pubkeyAsString'],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        CancelBidArgs,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['instruction', 'u8'],\r\n                ['resource', 'pubkeyAsString'],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        SetAuthorityArgs,\r\n        {\r\n            kind: 'struct',\r\n            fields: [['instruction', 'u8']],\r\n        },\r\n    ],\r\n    [\r\n        AuctionData,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['authority', 'pubkeyAsString'],\r\n                ['tokenMint', 'pubkeyAsString'],\r\n                ['lastBid', { kind: 'option', type: 'u64' }],\r\n                ['endedAt', { kind: 'option', type: 'u64' }],\r\n                ['endAuctionAt', { kind: 'option', type: 'u64' }],\r\n                ['auctionGap', { kind: 'option', type: 'u64' }],\r\n                ['priceFloor', PriceFloor],\r\n                ['state', 'u8'],\r\n                ['bidState', BidState],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        AuctionDataExtended,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['totalUncancelledBids', 'u64'],\r\n                ['tickSize', { kind: 'option', type: 'u64' }],\r\n                ['gapTickSizePercentage', { kind: 'option', type: 'u8' }],\r\n                ['instantSalePrice', { kind: 'option', type: 'u64' }],\r\n                ['name', { kind: 'option', type: [32] }],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        PriceFloor,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['type', 'u8'],\r\n                ['hash', [32]],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        BidState,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['type', 'u8'],\r\n                ['bids', [Bid]],\r\n                ['max', 'u64'],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        Bid,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['key', 'pubkeyAsString'],\r\n                ['amount', 'u64'],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        BidderMetadata,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['bidderPubkey', 'pubkeyAsString'],\r\n                ['auctionPubkey', 'pubkeyAsString'],\r\n                ['lastBid', 'u64'],\r\n                ['lastBidTimestamp', 'u64'],\r\n                ['cancelled', 'u8'],\r\n            ],\r\n        },\r\n    ],\r\n    [\r\n        BidderPot,\r\n        {\r\n            kind: 'struct',\r\n            fields: [\r\n                ['bidderPot', 'pubkeyAsString'],\r\n                ['bidderAct', 'pubkeyAsString'],\r\n                ['auctionAct', 'pubkeyAsString'],\r\n                ['emptied', 'u8'],\r\n            ],\r\n        },\r\n    ],\r\n]);\r\nconst decodeAuctionData = (buffer) => {\r\n    return borsh_1.deserializeUnchecked(exports.AUCTION_SCHEMA, AuctionData, buffer);\r\n};\r\nexports.decodeAuctionData = decodeAuctionData;\r\nasync function createAuction(settings, creator, instructions) {\r\n    const auctionProgramId = programIds_1.programIds().auction;\r\n    const data = Buffer.from(borsh_1.serialize(exports.AUCTION_SCHEMA, settings));\r\n    const auctionKey = (await utils_1.findProgramAddress([\r\n        Buffer.from(exports.AUCTION_PREFIX),\r\n        utils_1.toPublicKey(auctionProgramId).toBuffer(),\r\n        utils_1.toPublicKey(settings.resource).toBuffer(),\r\n    ], utils_1.toPublicKey(auctionProgramId)))[0];\r\n    const keys = [\r\n        {\r\n            pubkey: utils_1.toPublicKey(creator),\r\n            isSigner: true,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(await getAuctionExtended({\r\n                auctionProgramId,\r\n                resource: settings.resource,\r\n            })),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SystemProgram.programId,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    instructions.push(new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: utils_1.toPublicKey(auctionProgramId),\r\n        data: data,\r\n    }));\r\n}\r\nexports.createAuction = createAuction;\r\nasync function startAuctionWithResource(resource, creator, instructions) {\r\n    const auctionProgramId = programIds_1.programIds().auction;\r\n    const data = Buffer.from(borsh_1.serialize(exports.AUCTION_SCHEMA, new StartAuctionArgs({\r\n        resource,\r\n    })));\r\n    const auctionKey = (await utils_1.findProgramAddress([\r\n        Buffer.from(exports.AUCTION_PREFIX),\r\n        utils_1.toPublicKey(auctionProgramId).toBuffer(),\r\n        utils_1.toPublicKey(resource).toBuffer(),\r\n    ], utils_1.toPublicKey(auctionProgramId)))[0];\r\n    const keys = [\r\n        {\r\n            pubkey: utils_1.toPublicKey(creator),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    instructions.push(new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: utils_1.toPublicKey(auctionProgramId),\r\n        data: data,\r\n    }));\r\n}\r\nexports.startAuctionWithResource = startAuctionWithResource;\r\nasync function setAuctionAuthority(auction, currentAuthority, newAuthority, instructions) {\r\n    const auctionProgramId = programIds_1.programIds().auction;\r\n    const data = Buffer.from(borsh_1.serialize(exports.AUCTION_SCHEMA, new SetAuthorityArgs()));\r\n    const keys = [\r\n        {\r\n            pubkey: utils_1.toPublicKey(auction),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(currentAuthority),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(newAuthority),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    instructions.push(new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: utils_1.toPublicKey(auctionProgramId),\r\n        data: data,\r\n    }));\r\n}\r\nexports.setAuctionAuthority = setAuctionAuthority;\r\nasync function placeBid(bidderPubkey, bidderTokenPubkey, bidderPotTokenPubkey, tokenMintPubkey, transferAuthority, payer, resource, amount, instructions) {\r\n    const auctionProgramId = programIds_1.programIds().auction;\r\n    const data = Buffer.from(borsh_1.serialize(exports.AUCTION_SCHEMA, new PlaceBidArgs({\r\n        resource,\r\n        amount,\r\n    })));\r\n    const auctionKey = (await utils_1.findProgramAddress([\r\n        Buffer.from(exports.AUCTION_PREFIX),\r\n        utils_1.toPublicKey(auctionProgramId).toBuffer(),\r\n        utils_1.toPublicKey(resource).toBuffer(),\r\n    ], utils_1.toPublicKey(auctionProgramId)))[0];\r\n    const bidderPotKey = await getBidderPotKey({\r\n        auctionProgramId,\r\n        auctionKey,\r\n        bidderPubkey,\r\n    });\r\n    const bidderMetaKey = (await utils_1.findProgramAddress([\r\n        Buffer.from(exports.AUCTION_PREFIX),\r\n        utils_1.toPublicKey(auctionProgramId).toBuffer(),\r\n        utils_1.toPublicKey(auctionKey).toBuffer(),\r\n        utils_1.toPublicKey(bidderPubkey).toBuffer(),\r\n        Buffer.from('metadata'),\r\n    ], utils_1.toPublicKey(auctionProgramId)))[0];\r\n    const keys = [\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidderPubkey),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidderTokenPubkey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidderPotKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidderPotTokenPubkey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidderMetaKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(await getAuctionExtended({ auctionProgramId, resource })),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(tokenMintPubkey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(transferAuthority),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(payer),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SystemProgram.programId,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: programIds_1.programIds().token,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    instructions.push(new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: utils_1.toPublicKey(auctionProgramId),\r\n        data: data,\r\n    }));\r\n    return {\r\n        amount,\r\n    };\r\n}\r\nexports.placeBid = placeBid;\r\nasync function getBidderPotKey({ auctionProgramId, auctionKey, bidderPubkey, }) {\r\n    return (await utils_1.findProgramAddress([\r\n        Buffer.from(exports.AUCTION_PREFIX),\r\n        utils_1.toPublicKey(auctionProgramId).toBuffer(),\r\n        utils_1.toPublicKey(auctionKey).toBuffer(),\r\n        utils_1.toPublicKey(bidderPubkey).toBuffer(),\r\n    ], utils_1.toPublicKey(auctionProgramId)))[0];\r\n}\r\nexports.getBidderPotKey = getBidderPotKey;\r\nasync function getAuctionExtended({ auctionProgramId, resource, }) {\r\n    return (await utils_1.findProgramAddress([\r\n        Buffer.from(exports.AUCTION_PREFIX),\r\n        utils_1.toPublicKey(auctionProgramId).toBuffer(),\r\n        utils_1.toPublicKey(resource).toBuffer(),\r\n        Buffer.from(exports.EXTENDED),\r\n    ], utils_1.toPublicKey(auctionProgramId)))[0];\r\n}\r\nexports.getAuctionExtended = getAuctionExtended;\r\nasync function cancelBid(bidderPubkey, bidderTokenPubkey, bidderPotTokenPubkey, tokenMintPubkey, resource, instructions) {\r\n    const auctionProgramId = programIds_1.programIds().auction;\r\n    const data = Buffer.from(borsh_1.serialize(exports.AUCTION_SCHEMA, new CancelBidArgs({\r\n        resource,\r\n    })));\r\n    const auctionKey = (await utils_1.findProgramAddress([\r\n        Buffer.from(exports.AUCTION_PREFIX),\r\n        utils_1.toPublicKey(auctionProgramId).toBuffer(),\r\n        utils_1.toPublicKey(resource).toBuffer(),\r\n    ], utils_1.toPublicKey(auctionProgramId)))[0];\r\n    const bidderPotKey = await getBidderPotKey({\r\n        auctionProgramId,\r\n        auctionKey,\r\n        bidderPubkey,\r\n    });\r\n    const bidderMetaKey = (await utils_1.findProgramAddress([\r\n        Buffer.from(exports.AUCTION_PREFIX),\r\n        utils_1.toPublicKey(auctionProgramId).toBuffer(),\r\n        utils_1.toPublicKey(auctionKey).toBuffer(),\r\n        utils_1.toPublicKey(bidderPubkey).toBuffer(),\r\n        Buffer.from('metadata'),\r\n    ], utils_1.toPublicKey(auctionProgramId)))[0];\r\n    const keys = [\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidderPubkey),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidderTokenPubkey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidderPotKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidderPotTokenPubkey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidderMetaKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(await getAuctionExtended({ auctionProgramId, resource })),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(tokenMintPubkey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SystemProgram.programId,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: programIds_1.programIds().token,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    instructions.push(new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: utils_1.toPublicKey(auctionProgramId),\r\n        data: data,\r\n    }));\r\n}\r\nexports.cancelBid = cancelBid;\r\n//# sourceMappingURL=auction.js.map"]},"metadata":{},"sourceType":"script"}