{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diego\\\\metaplex\\\\js\\\\packages\\\\gumdrop\\\\src\\\\components\\\\Close.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box, Button, CircularProgress, FormControl, InputLabel, Link as HyperLink, MenuItem, Stack, Select, TextField } from \"@mui/material\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { Keypair } from \"@solana/web3.js\";\nimport { notify } from \"@oyster/common\";\nimport { useConnection, Connection } from \"../contexts\";\nimport { closeGumdrop } from \"../utils/claimant\";\nimport { explorerLinkFor } from \"../utils/transactions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Close = () => {\n  _s();\n\n  const connection = useConnection();\n  const wallet = useWallet();\n  const [baseKey, setBaseKey] = React.useState(\"\");\n  const [claimMethod, setClaimMethod] = React.useState(localStorage.getItem(\"claimMethod\") || \"transfer\");\n  const [mint, setMint] = React.useState(localStorage.getItem(\"mint\") || \"\");\n  const [candyConfig, setCandyConfig] = React.useState(localStorage.getItem(\"candyConfig\") || \"\");\n  const [candyUUID, setCandyUUID] = React.useState(localStorage.getItem(\"candyUUID\") || \"\");\n  const [masterMint, setMasterMint] = React.useState(localStorage.getItem(\"masterMint\") || \"\");\n\n  const submit = async e => {\n    e.preventDefault();\n\n    if (!wallet.connected || wallet.publicKey === null) {\n      throw new Error(`Wallet not connected`);\n    }\n\n    const base = Keypair.fromSecretKey(new Uint8Array(JSON.parse(baseKey)));\n    const instructions = await closeGumdrop(connection, wallet.publicKey, base, claimMethod, mint, candyConfig, candyUUID, masterMint);\n    const closeResult = await Connection.sendTransactionWithRetry(connection, wallet, instructions, [base]);\n    console.log(closeResult);\n\n    if (typeof closeResult === \"string\") {\n      notify({\n        message: \"Close failed\",\n        description: closeResult\n      });\n    } else {\n      notify({\n        message: \"Close succeeded\",\n        description: /*#__PURE__*/_jsxDEV(HyperLink, {\n          href: explorerLinkFor(closeResult.txid, connection),\n          children: \"View transaction on explorer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      });\n    }\n  };\n\n  const claimData = claimMethod => {\n    if (claimMethod === \"candy\") {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"config-text-field\",\n          label: \"Candy Config\",\n          value: candyConfig,\n          onChange: e => setCandyConfig(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"config-uuid-text-field\",\n          label: \"Candy UUID\",\n          value: candyUUID,\n          onChange: e => setCandyUUID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    } else if (claimMethod === \"transfer\") {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"mint-text-field\",\n          label: \"Mint\",\n          value: mint,\n          onChange: e => setMint(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this);\n    } else if (claimMethod === \"edition\") {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"master-mint-text-field\",\n          label: \"Master Mint\",\n          value: masterMint,\n          onChange: e => setMasterMint(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadingProgress = () => /*#__PURE__*/_jsxDEV(CircularProgress, {\n    size: 24,\n    sx: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: '-12px',\n      marginLeft: '-12px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"base-text-field\",\n      label: \"Base Private Key\",\n      value: baseKey,\n      onChange: e => setBaseKey(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"claim-method-label\",\n        children: \"Claim Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"claim-method-label\",\n        id: \"claim-method-select\",\n        value: claimMethod,\n        label: \"Claim Method\",\n        onChange: e => {\n          localStorage.setItem(\"claimMethod\", e.target.value);\n          setClaimMethod(e.target.value);\n        },\n        style: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"transfer\",\n          children: \"Token Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"candy\",\n          children: \"Candy Machine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"edition\",\n          children: \"Limited Edition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), claimMethod !== \"\" && claimData(claimMethod), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disabled: !wallet.connected || !baseKey || loading,\n        variant: \"contained\",\n        style: {\n          width: \"100%\"\n        },\n        onClick: e => {\n          setLoading(true);\n\n          const wrap = async () => {\n            try {\n              await submit(e);\n              setLoading(false);\n            } catch (err) {\n              notify({\n                message: \"Close failed\",\n                description: `${err}`\n              });\n              setLoading(false);\n            }\n          };\n\n          wrap();\n        },\n        children: \"Close Gumdrop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this), loading && loadingProgress()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Close, \"vXBDF5wvEskPF6UOMLe+9Gq6Vxw=\", false, function () {\n  return [useConnection, useWallet];\n});\n\n_c = Close;\n\nvar _c;\n\n$RefreshReg$(_c, \"Close\");","map":{"version":3,"sources":["C:/Users/Diego/metaplex/js/packages/gumdrop/src/components/Close.tsx"],"names":["React","Box","Button","CircularProgress","FormControl","InputLabel","Link","HyperLink","MenuItem","Stack","Select","TextField","useWallet","Keypair","notify","useConnection","Connection","closeGumdrop","explorerLinkFor","Close","connection","wallet","baseKey","setBaseKey","useState","claimMethod","setClaimMethod","localStorage","getItem","mint","setMint","candyConfig","setCandyConfig","candyUUID","setCandyUUID","masterMint","setMasterMint","submit","e","preventDefault","connected","publicKey","Error","base","fromSecretKey","Uint8Array","JSON","parse","instructions","closeResult","sendTransactionWithRetry","console","log","message","description","txid","claimData","target","value","loading","setLoading","loadingProgress","position","top","left","marginTop","marginLeft","setItem","textAlign","width","wrap","err"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Link as HyperLink,\r\n  MenuItem,\r\n  Stack,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\nimport {\r\n  useWallet,\r\n} from \"@solana/wallet-adapter-react\";\r\nimport {\r\n  Keypair,\r\n} from \"@solana/web3.js\";\r\nimport {\r\n  notify,\r\n} from \"@oyster/common\";\r\n\r\nimport {\r\n  useConnection,\r\n  Connection,\r\n} from \"../contexts\";\r\nimport {\r\n  closeGumdrop,\r\n} from \"../utils/claimant\";\r\nimport {\r\n  explorerLinkFor,\r\n} from \"../utils/transactions\";\r\n\r\nexport const Close = () => {\r\n  const connection = useConnection();\r\n  const wallet = useWallet();\r\n\r\n  const [baseKey, setBaseKey] = React.useState(\"\");\r\n  const [claimMethod, setClaimMethod] = React.useState(localStorage.getItem(\"claimMethod\") || \"transfer\");\r\n  const [mint, setMint] = React.useState(localStorage.getItem(\"mint\") || \"\");\r\n  const [candyConfig, setCandyConfig] = React.useState(localStorage.getItem(\"candyConfig\") || \"\");\r\n  const [candyUUID, setCandyUUID] = React.useState(localStorage.getItem(\"candyUUID\") || \"\");\r\n  const [masterMint, setMasterMint] = React.useState(localStorage.getItem(\"masterMint\") || \"\");\r\n\r\n  const submit = async (e : React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!wallet.connected || wallet.publicKey === null) {\r\n      throw new Error(`Wallet not connected`);\r\n    }\r\n\r\n    const base = Keypair.fromSecretKey(\r\n      new Uint8Array(JSON.parse(baseKey)));\r\n\r\n    const instructions = await closeGumdrop(\r\n      connection,\r\n      wallet.publicKey,\r\n      base,\r\n      claimMethod,\r\n      mint,\r\n      candyConfig,\r\n      candyUUID,\r\n      masterMint,\r\n    );\r\n\r\n    const closeResult = await Connection.sendTransactionWithRetry(\r\n      connection,\r\n      wallet,\r\n      instructions,\r\n      [base]\r\n    );\r\n\r\n    console.log(closeResult);\r\n    if (typeof closeResult === \"string\") {\r\n      notify({\r\n        message: \"Close failed\",\r\n        description: closeResult,\r\n      });\r\n    } else {\r\n      notify({\r\n        message: \"Close succeeded\",\r\n        description: (\r\n          <HyperLink href={explorerLinkFor(closeResult.txid, connection)}>\r\n            View transaction on explorer\r\n          </HyperLink>\r\n        ),\r\n      });\r\n    }\r\n  };\r\n\r\n  const claimData = (claimMethod) => {\r\n    if (claimMethod === \"candy\") {\r\n      return (\r\n        <React.Fragment>\r\n          <TextField\r\n            id=\"config-text-field\"\r\n            label=\"Candy Config\"\r\n            value={candyConfig}\r\n            onChange={e => setCandyConfig(e.target.value)}\r\n          />\r\n          <TextField\r\n            id=\"config-uuid-text-field\"\r\n            label=\"Candy UUID\"\r\n            value={candyUUID}\r\n            onChange={e => setCandyUUID(e.target.value)}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    } else if (claimMethod === \"transfer\") {\r\n      return (\r\n        <React.Fragment>\r\n          <TextField\r\n            id=\"mint-text-field\"\r\n            label=\"Mint\"\r\n            value={mint}\r\n            onChange={(e) => setMint(e.target.value)}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    } else if (claimMethod === \"edition\") {\r\n      return (\r\n        <React.Fragment>\r\n          <TextField\r\n            id=\"master-mint-text-field\"\r\n            label=\"Master Mint\"\r\n            value={masterMint}\r\n            onChange={(e) => setMasterMint(e.target.value)}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const loadingProgress = () => (\r\n    <CircularProgress\r\n      size={24}\r\n      sx={{\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: '-12px',\r\n        marginLeft: '-12px',\r\n      }}\r\n    />\r\n  );\r\n  return (\r\n    <Stack spacing={2}>\r\n      <TextField\r\n        id=\"base-text-field\"\r\n        label=\"Base Private Key\"\r\n        value={baseKey}\r\n        onChange={(e) => setBaseKey(e.target.value)}\r\n      />\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"claim-method-label\">Claim Method</InputLabel>\r\n        <Select\r\n          labelId=\"claim-method-label\"\r\n          id=\"claim-method-select\"\r\n          value={claimMethod}\r\n          label=\"Claim Method\"\r\n          onChange={(e) => {\r\n            localStorage.setItem(\"claimMethod\", e.target.value);\r\n            setClaimMethod(e.target.value);\r\n          }}\r\n          style={{textAlign: \"left\"}}\r\n        >\r\n          <MenuItem value={\"transfer\"}>Token Transfer</MenuItem>\r\n          <MenuItem value={\"candy\"}>Candy Machine</MenuItem>\r\n          <MenuItem value={\"edition\"}>Limited Edition</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      {claimMethod !== \"\" && claimData(claimMethod)}\r\n      <Box sx={{ position: \"relative\" }}>\r\n      <Button\r\n        disabled={!wallet.connected || !baseKey || loading}\r\n        variant=\"contained\"\r\n        style={{ width: \"100%\" }}\r\n        onClick={(e) => {\r\n          setLoading(true);\r\n          const wrap = async () => {\r\n            try {\r\n              await submit(e);\r\n              setLoading(false);\r\n            } catch (err) {\r\n              notify({\r\n                message: \"Close failed\",\r\n                description: `${err}`,\r\n              });\r\n              setLoading(false);\r\n            }\r\n          };\r\n          wrap();\r\n        }}\r\n      >\r\n        Close Gumdrop\r\n      </Button>\r\n      {loading && loadingProgress()}\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}