{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rustString = exports.uint128 = exports.uint64 = exports.publicKey = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\n/**\r\n * Layout for a public key\r\n */\n\n\nconst publicKey = (property = 'publicKey') => {\n  const publicKeyLayout = BufferLayout.blob(32, property);\n\n  const _decode = publicKeyLayout.decode.bind(publicKeyLayout);\n\n  const _encode = publicKeyLayout.encode.bind(publicKeyLayout);\n\n  publicKeyLayout.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n\n    return new web3_js_1.PublicKey(data);\n  };\n\n  publicKeyLayout.encode = (key, buffer, offset) => {\n    return _encode(key.toBuffer(), buffer, offset);\n  };\n\n  return publicKeyLayout;\n};\n\nexports.publicKey = publicKey;\n/**\r\n * Layout for a 64bit unsigned value\r\n */\n\nconst uint64 = (property = 'uint64') => {\n  const layout = BufferLayout.blob(8, property);\n\n  const _decode = layout.decode.bind(layout);\n\n  const _encode = layout.encode.bind(layout);\n\n  layout.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n\n    return new bn_js_1.default([...data].reverse().map(i => `00${i.toString(16)}`.slice(-2)).join(''), 16);\n  };\n\n  layout.encode = (num, buffer, offset) => {\n    const a = num.toArray().reverse();\n    let b = Buffer.from(a);\n\n    if (b.length !== 8) {\n      const zeroPad = Buffer.alloc(8);\n      b.copy(zeroPad);\n      b = zeroPad;\n    }\n\n    return _encode(b, buffer, offset);\n  };\n\n  return layout;\n};\n\nexports.uint64 = uint64; // TODO: wrap in BN (what about decimals?)\n\nconst uint128 = (property = 'uint128') => {\n  const layout = BufferLayout.blob(16, property);\n\n  const _decode = layout.decode.bind(layout);\n\n  const _encode = layout.encode.bind(layout);\n\n  layout.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n\n    return new bn_js_1.default([...data].reverse().map(i => `00${i.toString(16)}`.slice(-2)).join(''), 16);\n  };\n\n  layout.encode = (num, buffer, offset) => {\n    const a = num.toArray().reverse();\n    let b = Buffer.from(a);\n\n    if (b.length !== 16) {\n      const zeroPad = Buffer.alloc(16);\n      b.copy(zeroPad);\n      b = zeroPad;\n    }\n\n    return _encode(b, buffer, offset);\n  };\n\n  return layout;\n};\n\nexports.uint128 = uint128;\n/**\r\n * Layout for a Rust String type\r\n */\n\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n\n  const _decode = rsl.decode.bind(rsl);\n\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n\n    return data.chars.toString('utf8');\n  };\n\n  rsl.encode = (str, buffer, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  return rsl;\n};\n\nexports.rustString = rustString;","map":{"version":3,"sources":["../../../src/utils/layout.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rustString = exports.uint128 = exports.uint64 = exports.publicKey = void 0;\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\r\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\r\n/**\r\n * Layout for a public key\r\n */\r\nconst publicKey = (property = 'publicKey') => {\r\n    const publicKeyLayout = BufferLayout.blob(32, property);\r\n    const _decode = publicKeyLayout.decode.bind(publicKeyLayout);\r\n    const _encode = publicKeyLayout.encode.bind(publicKeyLayout);\r\n    publicKeyLayout.decode = (buffer, offset) => {\r\n        const data = _decode(buffer, offset);\r\n        return new web3_js_1.PublicKey(data);\r\n    };\r\n    publicKeyLayout.encode = (key, buffer, offset) => {\r\n        return _encode(key.toBuffer(), buffer, offset);\r\n    };\r\n    return publicKeyLayout;\r\n};\r\nexports.publicKey = publicKey;\r\n/**\r\n * Layout for a 64bit unsigned value\r\n */\r\nconst uint64 = (property = 'uint64') => {\r\n    const layout = BufferLayout.blob(8, property);\r\n    const _decode = layout.decode.bind(layout);\r\n    const _encode = layout.encode.bind(layout);\r\n    layout.decode = (buffer, offset) => {\r\n        const data = _decode(buffer, offset);\r\n        return new bn_js_1.default([...data]\r\n            .reverse()\r\n            .map(i => `00${i.toString(16)}`.slice(-2))\r\n            .join(''), 16);\r\n    };\r\n    layout.encode = (num, buffer, offset) => {\r\n        const a = num.toArray().reverse();\r\n        let b = Buffer.from(a);\r\n        if (b.length !== 8) {\r\n            const zeroPad = Buffer.alloc(8);\r\n            b.copy(zeroPad);\r\n            b = zeroPad;\r\n        }\r\n        return _encode(b, buffer, offset);\r\n    };\r\n    return layout;\r\n};\r\nexports.uint64 = uint64;\r\n// TODO: wrap in BN (what about decimals?)\r\nconst uint128 = (property = 'uint128') => {\r\n    const layout = BufferLayout.blob(16, property);\r\n    const _decode = layout.decode.bind(layout);\r\n    const _encode = layout.encode.bind(layout);\r\n    layout.decode = (buffer, offset) => {\r\n        const data = _decode(buffer, offset);\r\n        return new bn_js_1.default([...data]\r\n            .reverse()\r\n            .map(i => `00${i.toString(16)}`.slice(-2))\r\n            .join(''), 16);\r\n    };\r\n    layout.encode = (num, buffer, offset) => {\r\n        const a = num.toArray().reverse();\r\n        let b = Buffer.from(a);\r\n        if (b.length !== 16) {\r\n            const zeroPad = Buffer.alloc(16);\r\n            b.copy(zeroPad);\r\n            b = zeroPad;\r\n        }\r\n        return _encode(b, buffer, offset);\r\n    };\r\n    return layout;\r\n};\r\nexports.uint128 = uint128;\r\n/**\r\n * Layout for a Rust String type\r\n */\r\nconst rustString = (property = 'string') => {\r\n    const rsl = BufferLayout.struct([\r\n        BufferLayout.u32('length'),\r\n        BufferLayout.u32('lengthPadding'),\r\n        BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\r\n    ], property);\r\n    const _decode = rsl.decode.bind(rsl);\r\n    const _encode = rsl.encode.bind(rsl);\r\n    rsl.decode = (buffer, offset) => {\r\n        const data = _decode(buffer, offset);\r\n        return data.chars.toString('utf8');\r\n    };\r\n    rsl.encode = (str, buffer, offset) => {\r\n        const data = {\r\n            chars: Buffer.from(str, 'utf8'),\r\n        };\r\n        return _encode(data, buffer, offset);\r\n    };\r\n    return rsl;\r\n};\r\nexports.rustString = rustString;\r\n//# sourceMappingURL=layout.js.map"]},"metadata":{},"sourceType":"script"}