{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/Diego/metaplex/js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/Diego/metaplex/js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deprecatedRedeemParticipationBid = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar borsh_1 = require(\"borsh\");\n\nvar _1 = require(\".\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar deprecatedStates_1 = require(\"./deprecatedStates\");\n\nfunction deprecatedRedeemParticipationBid(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11) {\n  return _deprecatedRedeemParticipationBid.apply(this, arguments);\n}\n\nfunction _deprecatedRedeemParticipationBid() {\n  _deprecatedRedeemParticipationBid = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(vault, safetyDepositTokenStore, destination, safetyDeposit, bidder, payer, instructions, participationPrintingAccount, transferAuthority, acceptPaymentAccount, tokenPaymentAccount) {\n    var PROGRAM_IDS, store, _yield$_1$getAuctionK, auctionKey, auctionManagerKey, _yield$_1$getBidderKe, bidRedemption, bidMetadata, safetyDepositConfig, value, data, keys;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            PROGRAM_IDS = utils_1.programIds();\n            store = PROGRAM_IDS.store;\n\n            if (store) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('Store not initialized');\n\n          case 4:\n            _context.next = 6;\n            return _1.getAuctionKeys(vault);\n\n          case 6:\n            _yield$_1$getAuctionK = _context.sent;\n            auctionKey = _yield$_1$getAuctionK.auctionKey;\n            auctionManagerKey = _yield$_1$getAuctionK.auctionManagerKey;\n            _context.next = 11;\n            return _1.getBidderKeys(auctionKey, bidder);\n\n          case 11:\n            _yield$_1$getBidderKe = _context.sent;\n            bidRedemption = _yield$_1$getBidderKe.bidRedemption;\n            bidMetadata = _yield$_1$getBidderKe.bidMetadata;\n            _context.next = 16;\n            return _1.getSafetyDepositConfig(auctionManagerKey, safetyDeposit);\n\n          case 16:\n            safetyDepositConfig = _context.sent;\n            value = new deprecatedStates_1.DeprecatedRedeemParticipationBidArgs();\n            data = Buffer.from(borsh_1.serialize(_1.SCHEMA, value));\n            keys = [{\n              pubkey: utils_1.toPublicKey(auctionManagerKey),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(safetyDepositTokenStore),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(destination),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(bidRedemption),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(safetyDeposit),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(vault),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(safetyDepositConfig),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(auctionKey),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(bidMetadata),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(bidder),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(payer),\n              isSigner: true,\n              isWritable: false\n            }, {\n              pubkey: PROGRAM_IDS.token,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(PROGRAM_IDS.vault),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(PROGRAM_IDS.metadata),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: store,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: web3_js_1.SystemProgram.programId,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(transferAuthority),\n              isSigner: true,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(acceptPaymentAccount),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(tokenPaymentAccount),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(participationPrintingAccount),\n              isSigner: false,\n              isWritable: true\n            }];\n            instructions.push(new web3_js_1.TransactionInstruction({\n              keys: keys,\n              programId: utils_1.toPublicKey(PROGRAM_IDS.metaplex),\n              data: data\n            }));\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _deprecatedRedeemParticipationBid.apply(this, arguments);\n}\n\nexports.deprecatedRedeemParticipationBid = deprecatedRedeemParticipationBid;","map":{"version":3,"sources":["../../../../src/models/metaplex/deprecatedRedeemParticipationBid.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.deprecatedRedeemParticipationBid = void 0;\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nconst borsh_1 = require(\"borsh\");\r\nconst _1 = require(\".\");\r\nconst utils_1 = require(\"../../utils\");\r\nconst deprecatedStates_1 = require(\"./deprecatedStates\");\r\nasync function deprecatedRedeemParticipationBid(vault, safetyDepositTokenStore, destination, safetyDeposit, bidder, payer, instructions, participationPrintingAccount, transferAuthority, acceptPaymentAccount, tokenPaymentAccount) {\r\n    const PROGRAM_IDS = utils_1.programIds();\r\n    const store = PROGRAM_IDS.store;\r\n    if (!store) {\r\n        throw new Error('Store not initialized');\r\n    }\r\n    const { auctionKey, auctionManagerKey } = await _1.getAuctionKeys(vault);\r\n    const { bidRedemption, bidMetadata } = await _1.getBidderKeys(auctionKey, bidder);\r\n    const safetyDepositConfig = await _1.getSafetyDepositConfig(auctionManagerKey, safetyDeposit);\r\n    const value = new deprecatedStates_1.DeprecatedRedeemParticipationBidArgs();\r\n    const data = Buffer.from(borsh_1.serialize(_1.SCHEMA, value));\r\n    const keys = [\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionManagerKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(safetyDepositTokenStore),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(destination),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidRedemption),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(safetyDeposit),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(vault),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(safetyDepositConfig),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionKey),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidMetadata),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidder),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(payer),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: PROGRAM_IDS.token,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(PROGRAM_IDS.vault),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(PROGRAM_IDS.metadata),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: store,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SystemProgram.programId,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(transferAuthority),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(acceptPaymentAccount),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(tokenPaymentAccount),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(participationPrintingAccount),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n    ];\r\n    instructions.push(new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: utils_1.toPublicKey(PROGRAM_IDS.metaplex),\r\n        data,\r\n    }));\r\n}\r\nexports.deprecatedRedeemParticipationBid = deprecatedRedeemParticipationBid;\r\n//# sourceMappingURL=deprecatedRedeemParticipationBid.js.map"]},"metadata":{},"sourceType":"script"}