{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/Diego/metaplex/js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/Diego/metaplex/js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.redeemPrintingV2Bid = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar borsh_1 = require(\"borsh\");\n\nvar _1 = require(\".\");\n\nvar actions_1 = require(\"../../actions\");\n\nvar utils_1 = require(\"../../utils\");\n\nfunction redeemPrintingV2Bid(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14) {\n  return _redeemPrintingV2Bid.apply(this, arguments);\n}\n\nfunction _redeemPrintingV2Bid() {\n  _redeemPrintingV2Bid = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(vault, safetyDepositTokenStore, tokenAccount, safetyDeposit, bidder, payer, metadata, masterEdition, originalMint, newMint, edition, editionOffset, winIndex, instructions) {\n    var PROGRAM_IDS, store, _yield$_1$getAuctionK, auctionKey, auctionManagerKey, _yield$_1$getBidderKe, bidRedemption, bidMetadata, prizeTrackingTicket, safetyDepositConfig, newMetadata, newEdition, editionMarkPda, value, data, extended, keys;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            PROGRAM_IDS = utils_1.programIds();\n            store = PROGRAM_IDS.store;\n\n            if (store) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('Store not initialized');\n\n          case 4:\n            _context.next = 6;\n            return _1.getAuctionKeys(vault);\n\n          case 6:\n            _yield$_1$getAuctionK = _context.sent;\n            auctionKey = _yield$_1$getAuctionK.auctionKey;\n            auctionManagerKey = _yield$_1$getAuctionK.auctionManagerKey;\n            _context.next = 11;\n            return _1.getBidderKeys(auctionKey, bidder);\n\n          case 11:\n            _yield$_1$getBidderKe = _context.sent;\n            bidRedemption = _yield$_1$getBidderKe.bidRedemption;\n            bidMetadata = _yield$_1$getBidderKe.bidMetadata;\n            _context.next = 16;\n            return _1.getPrizeTrackingTicket(auctionManagerKey, originalMint);\n\n          case 16:\n            prizeTrackingTicket = _context.sent;\n            _context.next = 19;\n            return _1.getSafetyDepositConfig(auctionManagerKey, safetyDeposit);\n\n          case 19:\n            safetyDepositConfig = _context.sent;\n            _context.next = 22;\n            return actions_1.getMetadata(newMint);\n\n          case 22:\n            newMetadata = _context.sent;\n            _context.next = 25;\n            return actions_1.getEdition(newMint);\n\n          case 25:\n            newEdition = _context.sent;\n            _context.next = 28;\n            return actions_1.getEditionMarkPda(originalMint, edition);\n\n          case 28:\n            editionMarkPda = _context.sent;\n            value = new _1.RedeemPrintingV2BidArgs({\n              editionOffset: editionOffset,\n              winIndex: winIndex\n            });\n            data = Buffer.from(borsh_1.serialize(_1.SCHEMA, value));\n            _context.next = 33;\n            return actions_1.getAuctionExtended({\n              auctionProgramId: PROGRAM_IDS.auction,\n              resource: vault\n            });\n\n          case 33:\n            extended = _context.sent;\n            keys = [{\n              pubkey: utils_1.toPublicKey(auctionManagerKey),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(safetyDepositTokenStore),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(tokenAccount),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(bidRedemption),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(safetyDeposit),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(vault),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(safetyDepositConfig),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(auctionKey),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(bidMetadata),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(bidder),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(payer),\n              isSigner: true,\n              isWritable: true\n            }, {\n              pubkey: PROGRAM_IDS.token,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(PROGRAM_IDS.vault),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(PROGRAM_IDS.metadata),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: store,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: web3_js_1.SystemProgram.programId,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(prizeTrackingTicket),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(newMetadata),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(newEdition),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(masterEdition),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(newMint),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: utils_1.toPublicKey(editionMarkPda),\n              isSigner: false,\n              isWritable: true\n            }, {\n              // Mint authority (this) is going to be the payer since the bidder\n              // may not be signer hre - we may be redeeming for someone else (permissionless)\n              // and during the txn, mint authority is removed from us and given to master edition.\n              // The ATA account is already owned by bidder by default. No signing needed\n              pubkey: utils_1.toPublicKey(payer),\n              isSigner: true,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(metadata),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: utils_1.toPublicKey(extended),\n              isSigner: false,\n              isWritable: false\n            }];\n            instructions.push(new web3_js_1.TransactionInstruction({\n              keys: keys,\n              programId: utils_1.toPublicKey(PROGRAM_IDS.metaplex),\n              data: data\n            }));\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _redeemPrintingV2Bid.apply(this, arguments);\n}\n\nexports.redeemPrintingV2Bid = redeemPrintingV2Bid;","map":{"version":3,"sources":["../../../../src/models/metaplex/redeemPrintingV2Bid.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.redeemPrintingV2Bid = void 0;\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nconst borsh_1 = require(\"borsh\");\r\nconst _1 = require(\".\");\r\nconst actions_1 = require(\"../../actions\");\r\nconst utils_1 = require(\"../../utils\");\r\nasync function redeemPrintingV2Bid(vault, safetyDepositTokenStore, tokenAccount, safetyDeposit, bidder, payer, metadata, masterEdition, originalMint, newMint, edition, editionOffset, winIndex, instructions) {\r\n    const PROGRAM_IDS = utils_1.programIds();\r\n    const store = PROGRAM_IDS.store;\r\n    if (!store) {\r\n        throw new Error('Store not initialized');\r\n    }\r\n    const { auctionKey, auctionManagerKey } = await _1.getAuctionKeys(vault);\r\n    const { bidRedemption, bidMetadata } = await _1.getBidderKeys(auctionKey, bidder);\r\n    const prizeTrackingTicket = await _1.getPrizeTrackingTicket(auctionManagerKey, originalMint);\r\n    const safetyDepositConfig = await _1.getSafetyDepositConfig(auctionManagerKey, safetyDeposit);\r\n    const newMetadata = await actions_1.getMetadata(newMint);\r\n    const newEdition = await actions_1.getEdition(newMint);\r\n    const editionMarkPda = await actions_1.getEditionMarkPda(originalMint, edition);\r\n    const value = new _1.RedeemPrintingV2BidArgs({ editionOffset, winIndex });\r\n    const data = Buffer.from(borsh_1.serialize(_1.SCHEMA, value));\r\n    const extended = await actions_1.getAuctionExtended({\r\n        auctionProgramId: PROGRAM_IDS.auction,\r\n        resource: vault,\r\n    });\r\n    const keys = [\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionManagerKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(safetyDepositTokenStore),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(tokenAccount),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidRedemption),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(safetyDeposit),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(vault),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(safetyDepositConfig),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionKey),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidMetadata),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(bidder),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(payer),\r\n            isSigner: true,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: PROGRAM_IDS.token,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(PROGRAM_IDS.vault),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(PROGRAM_IDS.metadata),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: store,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SystemProgram.programId,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(prizeTrackingTicket),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(newMetadata),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(newEdition),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(masterEdition),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(newMint),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(editionMarkPda),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            // Mint authority (this) is going to be the payer since the bidder\r\n            // may not be signer hre - we may be redeeming for someone else (permissionless)\r\n            // and during the txn, mint authority is removed from us and given to master edition.\r\n            // The ATA account is already owned by bidder by default. No signing needed\r\n            pubkey: utils_1.toPublicKey(payer),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(metadata),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(extended),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    instructions.push(new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: utils_1.toPublicKey(PROGRAM_IDS.metaplex),\r\n        data,\r\n    }));\r\n}\r\nexports.redeemPrintingV2Bid = redeemPrintingV2Bid;\r\n//# sourceMappingURL=redeemPrintingV2Bid.js.map"]},"metadata":{},"sourceType":"script"}