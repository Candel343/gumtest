{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPipelineExecutor = void 0;\n\nasync function createPipelineExecutor(data, executor, {\n  delay = 0,\n  jobsCount = 1,\n  sequence = 1\n} = {}) {\n  function execute(iter) {\n    executor(iter.value);\n  }\n\n  async function next() {\n    if (sequence <= 1) {\n      const iter = data.next();\n\n      if (iter.done) {\n        return;\n      }\n\n      await execute(iter);\n    } else {\n      const promises = [];\n      let isDone = false;\n\n      for (let i = 0; i < sequence; i++) {\n        const iter = data.next();\n\n        if (!iter.done) {\n          promises.push(execute(iter));\n        } else {\n          isDone = true;\n          break;\n        }\n      }\n\n      await Promise.all(promises);\n\n      if (isDone) {\n        return;\n      }\n    }\n\n    if (delay > 0) {\n      await new Promise(resolve => setTimeout(resolve, delay));\n    } else {\n      await Promise.resolve();\n    }\n\n    await next();\n  }\n\n  const result = new Array(jobsCount);\n\n  for (let i = 0; i < jobsCount; i++) {\n    result[i] = next();\n  }\n\n  await Promise.all(result);\n}\n\nexports.createPipelineExecutor = createPipelineExecutor;","map":{"version":3,"sources":["../../../src/utils/createPipelineExecutor.ts"],"names":[],"mappings":";;;;;;;AAAO,eAAe,sBAAf,CACL,IADK,EAEL,QAFK,EAGL;AACE,EAAA,KAAK,GAAG,CADV;AAEE,EAAA,SAAS,GAAG,CAFd;AAGE,EAAA,QAAQ,GAAG;AAHb,IAQI,EAXC,EAWC;AAEN,WAAS,OAAT,CAAoB,IAApB,EAAgD;AAC9C,IAAA,QAAQ,CAAC,IAAI,CAAC,KAAN,CAAR;AACD;;AAED,iBAAe,IAAf,GAAmB;AACjB,QAAI,QAAQ,IAAI,CAAhB,EAAmB;AACjB,YAAM,IAAI,GAAG,IAAI,CAAC,IAAL,EAAb;;AACA,UAAI,IAAI,CAAC,IAAT,EAAe;AACb;AACD;;AACD,YAAM,OAAO,CAAC,IAAD,CAAb;AACD,KAND,MAMO;AACL,YAAM,QAAQ,GAAU,EAAxB;AACA,UAAI,MAAM,GAAG,KAAb;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAApB,EAA8B,CAAC,EAA/B,EAAmC;AACjC,cAAM,IAAI,GAAG,IAAI,CAAC,IAAL,EAAb;;AACA,YAAI,CAAC,IAAI,CAAC,IAAV,EAAgB;AACd,UAAA,QAAQ,CAAC,IAAT,CAAc,OAAO,CAAC,IAAD,CAArB;AACD,SAFD,MAEO;AACL,UAAA,MAAM,GAAG,IAAT;AACA;AACD;AACF;;AACD,YAAM,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAN;;AACA,UAAI,MAAJ,EAAY;AACV;AACD;AACF;;AACD,QAAI,KAAK,GAAG,CAAZ,EAAe;AACb,YAAM,IAAI,OAAJ,CAAY,OAAO,IAAI,UAAU,CAAC,OAAD,EAAU,KAAV,CAAjC,CAAN;AACD,KAFD,MAEO;AACL,YAAM,OAAO,CAAC,OAAR,EAAN;AACD;;AACD,UAAM,IAAI,EAAV;AACD;;AACD,QAAM,MAAM,GAAG,IAAI,KAAJ,CAAyB,SAAzB,CAAf;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAApB,EAA+B,CAAC,EAAhC,EAAoC;AAClC,IAAA,MAAM,CAAC,CAAD,CAAN,GAAY,IAAI,EAAhB;AACD;;AACD,QAAM,OAAO,CAAC,GAAR,CAAY,MAAZ,CAAN;AACD;;AArDD,OAAA,CAAA,sBAAA,GAAA,sBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createPipelineExecutor = void 0;\r\nasync function createPipelineExecutor(data, executor, { delay = 0, jobsCount = 1, sequence = 1, } = {}) {\r\n    function execute(iter) {\r\n        executor(iter.value);\r\n    }\r\n    async function next() {\r\n        if (sequence <= 1) {\r\n            const iter = data.next();\r\n            if (iter.done) {\r\n                return;\r\n            }\r\n            await execute(iter);\r\n        }\r\n        else {\r\n            const promises = [];\r\n            let isDone = false;\r\n            for (let i = 0; i < sequence; i++) {\r\n                const iter = data.next();\r\n                if (!iter.done) {\r\n                    promises.push(execute(iter));\r\n                }\r\n                else {\r\n                    isDone = true;\r\n                    break;\r\n                }\r\n            }\r\n            await Promise.all(promises);\r\n            if (isDone) {\r\n                return;\r\n            }\r\n        }\r\n        if (delay > 0) {\r\n            await new Promise(resolve => setTimeout(resolve, delay));\r\n        }\r\n        else {\r\n            await Promise.resolve();\r\n        }\r\n        await next();\r\n    }\r\n    const result = new Array(jobsCount);\r\n    for (let i = 0; i < jobsCount; i++) {\r\n        result[i] = next();\r\n    }\r\n    await Promise.all(result);\r\n}\r\nexports.createPipelineExecutor = createPipelineExecutor;\r\n//# sourceMappingURL=createPipelineExecutor.js.map"]},"metadata":{},"sourceType":"script"}