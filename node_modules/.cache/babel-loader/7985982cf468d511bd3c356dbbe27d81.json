{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withdrawMasterEdition = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst borsh_1 = require(\"borsh\");\n\nconst _1 = require(\".\");\n\nconst actions_1 = require(\"../../actions\");\n\nconst utils_1 = require(\"../../utils\");\n\nasync function withdrawMasterEdition(vault, safetyDepositTokenStore, destination, safetyDeposit, fractionMint, mint, instructions) {\n  const PROGRAM_IDS = utils_1.programIds();\n  const store = PROGRAM_IDS.store;\n\n  if (!store) {\n    throw new Error('Store not initialized');\n  }\n\n  const {\n    auctionKey,\n    auctionManagerKey\n  } = await _1.getAuctionKeys(vault);\n  const prizeTrackingTicket = await _1.getPrizeTrackingTicket(auctionManagerKey, mint);\n  const vaultAuthority = (await utils_1.findProgramAddress([Buffer.from(actions_1.VAULT_PREFIX), utils_1.toPublicKey(PROGRAM_IDS.vault).toBuffer(), utils_1.toPublicKey(vault).toBuffer()], utils_1.toPublicKey(PROGRAM_IDS.vault)))[0];\n  const auctionExtended = (await utils_1.findProgramAddress([Buffer.from(actions_1.AUCTION_PREFIX), utils_1.toPublicKey(PROGRAM_IDS.auction).toBuffer(), utils_1.toPublicKey(vault).toBuffer(), Buffer.from(actions_1.EXTENDED)], utils_1.toPublicKey(PROGRAM_IDS.auction)))[0];\n  const safetyDepositConfig = await _1.getSafetyDepositConfig(auctionManagerKey, safetyDeposit);\n  const value = new _1.WithdrawMasterEditionArgs();\n  const data = Buffer.from(borsh_1.serialize(_1.SCHEMA, value));\n  const keys = [{\n    pubkey: utils_1.toPublicKey(auctionManagerKey),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(safetyDepositTokenStore),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(destination),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(safetyDeposit),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(vault),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(fractionMint),\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: utils_1.toPublicKey(prizeTrackingTicket),\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: utils_1.toPublicKey(vaultAuthority),\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: utils_1.toPublicKey(auctionKey),\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: utils_1.toPublicKey(auctionExtended),\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: PROGRAM_IDS.token,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: utils_1.toPublicKey(PROGRAM_IDS.vault),\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: utils_1.toPublicKey(store),\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: utils_1.toPublicKey(safetyDepositConfig),\n    isSigner: false,\n    isWritable: false\n  }];\n  instructions.push(new web3_js_1.TransactionInstruction({\n    keys,\n    programId: utils_1.toPublicKey(PROGRAM_IDS.metaplex),\n    data\n  }));\n}\n\nexports.withdrawMasterEdition = withdrawMasterEdition;","map":{"version":3,"sources":["../../../../src/models/metaplex/withdrawMasterEdition.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.withdrawMasterEdition = void 0;\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nconst borsh_1 = require(\"borsh\");\r\nconst _1 = require(\".\");\r\nconst actions_1 = require(\"../../actions\");\r\nconst utils_1 = require(\"../../utils\");\r\nasync function withdrawMasterEdition(vault, safetyDepositTokenStore, destination, safetyDeposit, fractionMint, mint, instructions) {\r\n    const PROGRAM_IDS = utils_1.programIds();\r\n    const store = PROGRAM_IDS.store;\r\n    if (!store) {\r\n        throw new Error('Store not initialized');\r\n    }\r\n    const { auctionKey, auctionManagerKey } = await _1.getAuctionKeys(vault);\r\n    const prizeTrackingTicket = await _1.getPrizeTrackingTicket(auctionManagerKey, mint);\r\n    const vaultAuthority = (await utils_1.findProgramAddress([\r\n        Buffer.from(actions_1.VAULT_PREFIX),\r\n        utils_1.toPublicKey(PROGRAM_IDS.vault).toBuffer(),\r\n        utils_1.toPublicKey(vault).toBuffer(),\r\n    ], utils_1.toPublicKey(PROGRAM_IDS.vault)))[0];\r\n    const auctionExtended = (await utils_1.findProgramAddress([\r\n        Buffer.from(actions_1.AUCTION_PREFIX),\r\n        utils_1.toPublicKey(PROGRAM_IDS.auction).toBuffer(),\r\n        utils_1.toPublicKey(vault).toBuffer(),\r\n        Buffer.from(actions_1.EXTENDED),\r\n    ], utils_1.toPublicKey(PROGRAM_IDS.auction)))[0];\r\n    const safetyDepositConfig = await _1.getSafetyDepositConfig(auctionManagerKey, safetyDeposit);\r\n    const value = new _1.WithdrawMasterEditionArgs();\r\n    const data = Buffer.from(borsh_1.serialize(_1.SCHEMA, value));\r\n    const keys = [\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionManagerKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(safetyDepositTokenStore),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(destination),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(safetyDeposit),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(vault),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(fractionMint),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(prizeTrackingTicket),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(vaultAuthority),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionKey),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(auctionExtended),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: PROGRAM_IDS.token,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(PROGRAM_IDS.vault),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(store),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: utils_1.toPublicKey(safetyDepositConfig),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    instructions.push(new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: utils_1.toPublicKey(PROGRAM_IDS.metaplex),\r\n        data,\r\n    }));\r\n}\r\nexports.withdrawMasterEdition = withdrawMasterEdition;\r\n//# sourceMappingURL=withdrawMasterEdition.js.map"]},"metadata":{},"sourceType":"script"}