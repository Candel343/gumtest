{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.processVaultData = void 0;\n\nconst actions_1 = require(\"../../actions\");\n\nconst utils_1 = require(\"../../utils\");\n\nconst processVaultData = ({\n  account,\n  pubkey\n}, setter) => {\n  if (!isVaultAccount(account)) return;\n\n  try {\n    if (isSafetyDepositBoxV1Account(account)) {\n      const safetyDeposit = actions_1.decodeSafetyDeposit(account.data);\n      const parsedAccount = {\n        pubkey,\n        account: account,\n        info: safetyDeposit\n      };\n      setter('safetyDepositBoxesByVaultAndIndex', safetyDeposit.vault + '-' + safetyDeposit.order, parsedAccount);\n    }\n\n    if (isVaultV1Account(account)) {\n      const vault = actions_1.decodeVault(account.data);\n      const parsedAccount = {\n        pubkey,\n        account: account,\n        info: vault\n      };\n      setter('vaults', pubkey, parsedAccount);\n    }\n  } catch {// ignore errors\n    // add type as first byte for easier deserialization\n  }\n};\n\nexports.processVaultData = processVaultData;\n\nconst isVaultAccount = account => account && utils_1.pubkeyToString(account.owner) === utils_1.VAULT_ID;\n\nconst isSafetyDepositBoxV1Account = account => account.data[0] === actions_1.VaultKey.SafetyDepositBoxV1;\n\nconst isVaultV1Account = account => account.data[0] === actions_1.VaultKey.VaultV1;","map":{"version":3,"sources":["../../../../src/contexts/meta/processVaultData.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAOA,MAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAIO,MAAM,gBAAgB,GAAwB,CACnD;AAAE,EAAA,OAAF;AAAW,EAAA;AAAX,CADmD,EAEnD,MAFmD,KAGjD;AACF,MAAI,CAAC,cAAc,CAAC,OAAD,CAAnB,EAA8B;;AAE9B,MAAI;AACF,QAAI,2BAA2B,CAAC,OAAD,CAA/B,EAA0C;AACxC,YAAM,aAAa,GAAG,SAAA,CAAA,mBAAA,CAAoB,OAAO,CAAC,IAA5B,CAAtB;AACA,YAAM,aAAa,GAAoC;AACrD,QAAA,MADqD;AAErD,QAAA,OAAO,EAAE,OAF4C;AAGrD,QAAA,IAAI,EAAE;AAH+C,OAAvD;AAKA,MAAA,MAAM,CACJ,mCADI,EAEJ,aAAa,CAAC,KAAd,GAAsB,GAAtB,GAA4B,aAAa,CAAC,KAFtC,EAGJ,aAHI,CAAN;AAKD;;AACD,QAAI,gBAAgB,CAAC,OAAD,CAApB,EAA+B;AAC7B,YAAM,KAAK,GAAG,SAAA,CAAA,WAAA,CAAY,OAAO,CAAC,IAApB,CAAd;AACA,YAAM,aAAa,GAAyB;AAC1C,QAAA,MAD0C;AAE1C,QAAA,OAAO,EAAE,OAFiC;AAG1C,QAAA,IAAI,EAAE;AAHoC,OAA5C;AAMA,MAAA,MAAM,CAAC,QAAD,EAAW,MAAX,EAAmB,aAAnB,CAAN;AACD;AACF,GAxBD,CAwBE,MAAM,CACN;AACA;AACD;AACF,CAlCM;;AAAM,OAAA,CAAA,gBAAA,GAAgB,gBAAhB;;AAoCb,MAAM,cAAc,GAAI,OAAD,IACrB,OAAO,IAAI,OAAA,CAAA,cAAA,CAAe,OAAO,CAAC,KAAvB,MAAkC,OAAA,CAAA,QAD/C;;AAGA,MAAM,2BAA2B,GAAI,OAAD,IAClC,OAAO,CAAC,IAAR,CAAa,CAAb,MAAoB,SAAA,CAAA,QAAA,CAAS,kBAD/B;;AAGA,MAAM,gBAAgB,GAAI,OAAD,IACvB,OAAO,CAAC,IAAR,CAAa,CAAb,MAAoB,SAAA,CAAA,QAAA,CAAS,OAD/B","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.processVaultData = void 0;\r\nconst actions_1 = require(\"../../actions\");\r\nconst utils_1 = require(\"../../utils\");\r\nconst processVaultData = ({ account, pubkey }, setter) => {\r\n    if (!isVaultAccount(account))\r\n        return;\r\n    try {\r\n        if (isSafetyDepositBoxV1Account(account)) {\r\n            const safetyDeposit = actions_1.decodeSafetyDeposit(account.data);\r\n            const parsedAccount = {\r\n                pubkey,\r\n                account: account,\r\n                info: safetyDeposit,\r\n            };\r\n            setter('safetyDepositBoxesByVaultAndIndex', safetyDeposit.vault + '-' + safetyDeposit.order, parsedAccount);\r\n        }\r\n        if (isVaultV1Account(account)) {\r\n            const vault = actions_1.decodeVault(account.data);\r\n            const parsedAccount = {\r\n                pubkey,\r\n                account: account,\r\n                info: vault,\r\n            };\r\n            setter('vaults', pubkey, parsedAccount);\r\n        }\r\n    }\r\n    catch {\r\n        // ignore errors\r\n        // add type as first byte for easier deserialization\r\n    }\r\n};\r\nexports.processVaultData = processVaultData;\r\nconst isVaultAccount = (account) => account && utils_1.pubkeyToString(account.owner) === utils_1.VAULT_ID;\r\nconst isSafetyDepositBoxV1Account = (account) => account.data[0] === actions_1.VaultKey.SafetyDepositBoxV1;\r\nconst isVaultV1Account = (account) => account.data[0] === actions_1.VaultKey.VaultV1;\r\n//# sourceMappingURL=processVaultData.js.map"]},"metadata":{},"sourceType":"script"}