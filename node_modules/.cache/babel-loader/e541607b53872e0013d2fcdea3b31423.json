{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diego\\\\metaplex\\\\js\\\\packages\\\\gumdrop\\\\src\\\\components\\\\Create.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Box, Button, CircularProgress, FormControl, Link as HyperLink, InputLabel, MenuItem, Stack, Select, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\";\nimport FilePresentIcon from '@mui/icons-material/FilePresent';\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { Keypair, PublicKey } from \"@solana/web3.js\";\nimport { notify, shortenAddress } from \"@oyster/common\";\nimport BN from 'bn.js';\nimport { useConnection, Connection } from \"../contexts\";\nimport { GUMDROP_DISTRIBUTOR_ID, GUMDROP_TEMPORAL_SIGNER } from \"../utils/ids\";\nimport { buildGumdrop, dropInfoFor, parseClaimants, validateTransferClaims, validateCandyClaims, validateEditionClaims } from \"../utils/claimant\";\nimport { distributeAwsSes, distributeManual, distributeWallet, urlAndHandleFor } from \"../utils/communication\";\nimport { envFor, explorerLinkFor } from \"../utils/transactions\";\nimport { DragAndDrop } from \"./DragAndDrop\";\nimport { DefaultModal } from \"./DefaultModal\"; // NB: assumes no overflow\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst randomBytes = () => {\n  // TODO: some predictable seed? sha256?\n  const buf = new Uint8Array(4);\n  window.crypto.getRandomValues(buf);\n  return buf;\n};\n\nconst WHITESPACE = \"\\u00A0\";\n\nconst distribute = (method, auth, source, claimants, drop) => {\n  if (method === \"AWS SES\") {\n    return distributeAwsSes(auth, source, claimants, drop);\n  } else if (method === \"Manual\") {\n    return distributeManual(auth, source, claimants, drop);\n  } else if (method === \"Wallets\") {\n    return distributeWallet(auth, source, claimants, drop);\n  } else {\n    throw new Error(`Unrecognized claim distribution method ${method}`);\n  }\n};\n\nconst reactModal = renderModal => {\n  const container = document.createElement('div');\n  document.body.appendChild(container);\n\n  const displayModal = ({\n    onSubmit,\n    onDismiss\n  }) => {\n    ReactDOM.render(renderModal({\n      onSubmit,\n      onDismiss,\n      show: true\n    }), container);\n  };\n\n  const hideModal = ({\n    onSubmit,\n    onDismiss\n  }, callback) => {\n    ReactDOM.render(renderModal({\n      onSubmit,\n      onDismiss,\n      show: false\n    }), container, callback);\n  };\n\n  const destroyModal = () => {\n    ReactDOM.unmountComponentAtNode(container);\n    document.body.removeChild(container);\n  };\n\n  const confirmation = new Promise(resolve => {\n    const onSubmit = value => resolve(value);\n\n    const onDismiss = () => resolve(undefined);\n\n    displayModal({\n      onSubmit,\n      onDismiss\n    });\n  });\n  return confirmation.finally(() => {\n    const onSubmit = () => {};\n\n    const onDismiss = () => {};\n\n    hideModal({\n      onSubmit,\n      onDismiss\n    }, destroyModal);\n  });\n};\n\nconst resendOnlyRender = ({\n  show,\n  onSubmit,\n  onDismiss\n}) => {\n  const options = [{\n    click: () => onSubmit(\"create\"),\n    name: \"Create and Send\"\n  }, {\n    click: () => onSubmit(\"send\"),\n    name: \"Send only\"\n  }];\n  return /*#__PURE__*/_jsxDEV(DefaultModal, {\n    visible: show,\n    onCancel: onDismiss,\n    width: \"70ch\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"white\",\n        fontSize: \"0.9rem\",\n        marginTop: 8,\n        width: \"90%\"\n      },\n      children: \"Uploaded distribution list has URLs for all claimants. Skip creation of airdrop and only re-send links?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      style: {\n        width: \"100%\"\n      },\n      children: options.map(opt => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: \"100%\",\n            color: \"white\",\n            marginBottom: 8\n          },\n          variant: \"outlined\",\n          onClick: opt.click,\n          children: opt.name\n        }, opt.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\nconst displayMintTokens = (amount, mintInfo) => {\n  // TODO: better decimal rounding\n  return String(amount / Math.pow(10, mintInfo.decimals));\n};\n\nconst hyperLinkData = data => {\n  const encoded = encodeURIComponent(JSON.stringify(data));\n  return `data:text/plain;charset=utf-8,${encoded}`;\n};\n\nconst shouldSendRender = (claimants, needsPin, claimMethod, claimInfo, baseKey) => {\n  const limit = 1000; // eslint-disable-next-line react/prop-types\n\n  return function ClaimPreviewC({\n    show,\n    onSubmit,\n    onDismiss\n  }) {\n    return /*#__PURE__*/_jsxDEV(DefaultModal, {\n      visible: show,\n      onCancel: onDismiss,\n      width: \"70ch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"white\",\n          fontWeight: \"bold\",\n          fontSize: \"1.2rem\"\n        },\n        children: [\"Claim Distribution Preview\", claimants.length > limit ? ` (First ${limit})` : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\",\n          fontSize: \"1rem\",\n          textAlign: \"center\"\n        },\n        children: \"Approving will save the keypair authority generated for gumdrop state. This keypair is necessary to close the gumdrop later!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          \"td, th\": {\n            color: \"white\"\n          },\n          backgroundColor: \"#444444\",\n          borderRadius: \"5px\",\n          maxHeight: \"30ch\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Handle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: claimMethod === \"edition\" ? \"Edition\" : \"Tokens\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), needsPin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Pin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: claimants.slice(0, limit).map((c, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                'td, th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: [c.handle, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: claimMethod === \"transfer\" ? displayMintTokens(c.amount, claimInfo.mint.info) : claimMethod === \"candy\" ? c.amount :\n                /* === \"edition\" */\n                c.edition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), needsPin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: c.pin.toNumber()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 32\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          height: \"3ch\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: \"100%\",\n            color: \"white\",\n            marginBottom: 8\n          },\n          variant: \"outlined\",\n          onClick: () => onSubmit(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HyperLink, {\n          href: hyperLinkData(Array.from(baseKey.secretKey)),\n          download: `${baseKey.publicKey.toBase58()}.json`,\n          underline: \"none\",\n          style: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              width: \"100%\",\n              color: \"white\",\n              marginBottom: 8\n            },\n            variant: \"outlined\",\n            onClick: () => onSubmit(true),\n            children: \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  };\n};\n\nexport const Create = () => {\n  _s();\n\n  const connection = useConnection();\n  const wallet = useWallet(); // claim state\n\n  const [claimMethod, setClaimMethod] = React.useState(localStorage.getItem(\"claimMethod\") || \"\");\n  const [candyConfig, setCandyConfig] = React.useState(localStorage.getItem(\"candyConfig\") || \"\");\n  const [candyUUID, setCandyUUID] = React.useState(localStorage.getItem(\"candyUUID\") || \"\");\n  const [mint, setMint] = React.useState(localStorage.getItem(\"mint\") || \"\");\n  const [masterMint, setMasterMint] = React.useState(localStorage.getItem(\"masterMint\") || \"\");\n  const [filename, setFilename] = React.useState(\"\");\n  const [text, setText] = React.useState(\"\"); // response state\n\n  const [claimURLs, setClaimURLs] = React.useState([]);\n  const [responses, setResponses] = React.useState([]); // auth state\n\n  const [otpAuth, setOtpAuth] = React.useState(localStorage.getItem(\"otpAuth\") || \"default\");\n  const [commMethod, setCommMethod] = React.useState(localStorage.getItem(\"commMethod\") || \"\");\n  const [commAuth, setCommAuth] = React.useState({});\n  const [commSource, setCommSource] = React.useState(localStorage.getItem(\"commSource\") || \"\");\n  const [awsAccessKeyId, setAwsAccessKeyId] = React.useState(\"\");\n  const [awsSecretKey, setAwsSecretKey] = React.useState(\"\");\n\n  const explorerUrlFor = key => {\n    return `https://explorer.solana.com/address/${key.toBase58()}?cluster=${envFor(connection)}`;\n  };\n\n  const distributeClaims = async (claimants, drop) => {\n    const responses = await distribute(commMethod, commAuth, commSource, claimants, drop);\n    console.log(\"Responses\", responses);\n    setResponses(responses); // notify if the above routine is actually supposed to do anything\n    // (manual and wallet do nothing atm)\n\n    if (commMethod === \"AWS SES\") {\n      notify({\n        message: \"Gumdrop email distribution completed\"\n      });\n    }\n  };\n\n  const submit = async e => {\n    e.preventDefault();\n    setClaimURLs([]);\n    setResponses([]);\n\n    if (!wallet.connected || wallet.publicKey === null) {\n      throw new Error(`Wallet not connected`);\n    }\n\n    const claimants = parseClaimants(text, filename, commMethod);\n\n    if (claimants.length === 0) {\n      throw new Error(`No claimants provided`);\n    }\n\n    const dropInfo = dropInfoFor(envFor(connection), claimMethod, mint, candyConfig, masterMint); // check that auth is correct...\n\n    await distribute(commMethod, commAuth, commSource, [], dropInfo);\n\n    const mightHaveExisting = info => {\n      return info.url !== undefined && info.url !== null;\n    };\n\n    if (claimants.reduce((acc, c) => acc && mightHaveExisting(c), true)) {\n      const resendOnly = await reactModal(resendOnlyRender);\n      console.log(\"Resend only\", resendOnly);\n\n      if (resendOnly === \"send\") {\n        setClaimURLs(urlAndHandleFor(claimants));\n        await distributeClaims(claimants, dropInfo);\n        return;\n      } else if (resendOnly === \"create\") {// fallthrough to full create\n      } else {\n        // dismissed. don't use exceptions for control flow?\n        throw new Error(\"Dismissed\");\n      }\n    }\n\n    let claimInfo;\n\n    switch (claimMethod) {\n      case \"transfer\":\n        {\n          claimInfo = await validateTransferClaims(connection, wallet.publicKey, claimants, mint);\n          break;\n        }\n\n      case \"candy\":\n        {\n          claimInfo = await validateCandyClaims(connection, wallet.publicKey, claimants, candyConfig, candyUUID);\n          break;\n        }\n\n      case \"edition\":\n        {\n          claimInfo = await validateEditionClaims(connection, wallet.publicKey, claimants, masterMint);\n          break;\n        }\n\n      default:\n        throw new Error(`Unknown claim method ${claimMethod}`);\n    }\n\n    console.log(\"Claims info\", claimInfo);\n    claimants.forEach(c => {\n      c.pin = new BN(randomBytes());\n      c.seed = claimMethod === \"transfer\" ? claimInfo.mint.key : claimMethod === \"candy\" ? claimInfo.config :\n      /* === edition */\n      claimInfo.masterMint.key;\n    }); // temporal auth is the AWS signer by 'default' and a no-op key otherwise\n\n    let temporalSigner;\n\n    if (commMethod === \"Wallets\") {\n      // TODO: this is a bit jank. There should be no form option to set the\n      // OTP auth if we are using a wallet but there's still a defaulted value\n      // atm...\n      // NB: We also need this to not be 'none' since there is a special check\n      // for claimant_secret==accounts.temporal\n      temporalSigner = GUMDROP_DISTRIBUTOR_ID;\n    } else if (otpAuth === \"default\") {\n      temporalSigner = GUMDROP_TEMPORAL_SIGNER;\n    } else if (otpAuth === \"none\") {\n      temporalSigner = PublicKey.default;\n    } else {\n      throw new Error(`Unknown OTP authorization type ${otpAuth}`);\n    }\n\n    console.log(`Temporal signer: ${temporalSigner.toBase58()}`);\n    const base = Keypair.generate();\n    console.log(`Base ${base.publicKey.toBase58()}`);\n    const needsPin = commMethod !== \"Wallets\";\n    const instructions = await buildGumdrop(connection, wallet.publicKey, needsPin, claimMethod, `${window.location.origin}/gumdrop`, base.publicKey, temporalSigner, claimants, claimInfo);\n    const shouldSend = await reactModal(shouldSendRender(claimants, needsPin, claimMethod, claimInfo, base));\n\n    if (shouldSend !== true) {\n      // dismissed. don't use exceptions for control flow?\n      throw new Error(\"Claim distribution preview not approved\");\n    }\n\n    setClaimURLs(urlAndHandleFor(claimants));\n    const createResult = await Connection.sendTransactionWithRetry(connection, wallet, instructions, [base]);\n    console.log(createResult);\n\n    if (typeof createResult === \"string\") {\n      throw new Error(createResult);\n    } else {\n      notify({\n        message: \"Gumdrop creation succeeded\",\n        description: /*#__PURE__*/_jsxDEV(HyperLink, {\n          href: explorerLinkFor(createResult.txid, connection),\n          children: \"View transaction on explorer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)\n      });\n    }\n\n    console.log(\"Distributing claim URLs\");\n    await distributeClaims(claimants, dropInfo);\n  };\n\n  const handleFiles = files => {\n    if (files === null || files.length !== 1) {\n      notify({\n        message: \"File upload failed\",\n        description: `Received ${files === null || files === void 0 ? void 0 : files.length} files`\n      });\n      return;\n    }\n\n    const file = files[0];\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e !== null && e.target !== null) {\n        if (typeof e.target.result === \"string\") {\n          try {\n            parseClaimants(e.target.result, file.name, commMethod);\n          } catch {\n            notify({\n              message: `File upload failed for: ${file.name}`,\n              description: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Could not parse uploaded file.\", WHITESPACE, /*#__PURE__*/_jsxDEV(HyperLink, {\n                  href: \"#/\",\n                  children: \"Does it follow the JSON scheme?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this)\n            });\n            setFilename(\"\");\n            setText(\"\");\n            return;\n          }\n\n          setFilename(file.name);\n          setText(e.target.result);\n        } else {\n          notify({\n            message: `File upload failed for: ${file.name}`,\n            description: \"Could not read uploaded file\"\n          });\n        }\n      }\n    };\n\n    reader.readAsText(file);\n  };\n\n  const claimData = claimMethod => {\n    if (claimMethod === \"candy\") {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"config-text-field\",\n          label: \"Candy Config\",\n          value: candyConfig,\n          onChange: e => {\n            setCandyConfig(e.target.value);\n            localStorage.setItem(\"candyConfig\", e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"config-uuid-text-field\",\n          label: \"Candy UUID\",\n          value: candyUUID,\n          onChange: e => {\n            setCandyUUID(e.target.value);\n            localStorage.setItem(\"candyUUID\", e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this);\n    } else if (claimMethod === \"transfer\") {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"mint-text-field\",\n        label: \"Mint\",\n        value: mint,\n        onChange: e => {\n          localStorage.setItem(\"mint\", e.target.value);\n          setMint(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this);\n    } else if (claimMethod === \"edition\") {\n      // transfers master mint token from this account to the distributor\n      // wallet ATA\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"master-mint-text-field\",\n        label: \"Master Mint\",\n        value: masterMint,\n        onChange: e => {\n          localStorage.setItem(\"masterMint\", e.target.value);\n          setMasterMint(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const commAuthorization = commMethod => {\n    if (commMethod === \"AWS SES\") {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"comm-access-key-id-field\",\n          label: `${commMethod} Access Key Id`,\n          value: awsAccessKeyId,\n          onChange: e => {\n            setCommAuth(prev => ({ ...prev,\n              accessKeyId: e.target.value\n            }));\n            setAwsAccessKeyId(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"comm-secret-access-key-field\",\n          label: `${commMethod} Secret Access Key`,\n          value: awsSecretKey,\n          onChange: e => {\n            setCommAuth(prev => ({ ...prev,\n              secretAccessKey: e.target.value\n            }));\n            setAwsSecretKey(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"comm-source-field\",\n          label: `${commMethod} Source`,\n          value: commSource,\n          onChange: e => {\n            localStorage.setItem(\"commSource\", e.target.value);\n            setCommSource(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this);\n    } // commMethod === \"Manual\" || commMethod === \"Wallets\"\n\n\n    return null;\n  };\n\n  const fileUpload = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DragAndDrop, {\n      handleDrop: handleFiles,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        style: {\n          height: \"15ch\"\n        },\n        sx: {\n          border: '1px dashed grey',\n          justifyContent: \"center\",\n          alignContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          component: \"label\",\n          style: {\n            padding: 0,\n            // don't make the button click field too large...\n            marginTop: \"5ch\",\n            marginBottom: \"5ch\"\n          },\n          children: [\"Upload a \", filename === \"\" ? \"distribution\" : \"different\", \" list\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => {\n              handleFiles(e.target.files); // re-parse every time...\n\n              e.target.value = '';\n            },\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this), WHITESPACE, /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          component: \"label\",\n          disabled: true,\n          style: {\n            padding: 0,\n            color: \"#eee\"\n          },\n          children: \"or drag it here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this), filename !== \"\" ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      component: \"label\",\n      disabled: true,\n      style: {\n        padding: 0,\n        color: \"#eee\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(FilePresentIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [WHITESPACE, \" Uploaded \", filename]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 612,\n    columnNumber: 5\n  }, this);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadingProgress = () => /*#__PURE__*/_jsxDEV(CircularProgress, {\n    size: 24,\n    sx: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: '-12px',\n      marginLeft: '-12px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 681,\n    columnNumber: 5\n  }, this);\n\n  const createAirdrop = /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      disabled: !wallet.connected || !commMethod || !filename || loading,\n      variant: \"contained\",\n      style: {\n        width: \"100%\"\n      },\n      onClick: e => {\n        setLoading(true);\n\n        const wrap = async () => {\n          try {\n            await submit(e);\n            setLoading(false);\n          } catch (err) {\n            notify({\n              message: \"Create failed\",\n              description: `${err}`\n            });\n            setLoading(false);\n          }\n        };\n\n        wrap();\n      },\n      children: [\"Create\", claimURLs.length > 0 ? \" Another \" : \" \", \"Gumdrop\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 5\n    }, this), loading && loadingProgress()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 693,\n    columnNumber: 5\n  }, this);\n\n  const otpAuthC = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"otp-auth-label\",\n        children: \"OTP Authorization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"otp-auth-label\",\n        id: \"otp-auth-select\",\n        value: otpAuth,\n        label: \"OTP Authorization\",\n        onChange: e => {\n          localStorage.setItem(\"otpAuth\", e.target.value);\n          setOtpAuth(e.target.value);\n        },\n        style: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"default\",\n          children: [\"Default\", WHITESPACE, /*#__PURE__*/_jsxDEV(HyperLink, {\n            href: explorerUrlFor(GUMDROP_TEMPORAL_SIGNER),\n            underline: \"none\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [\"(\", shortenAddress(GUMDROP_TEMPORAL_SIGNER.toBase58()), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"none\",\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 722,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"claim-method-label\",\n        children: \"Claim Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"claim-method-label\",\n        id: \"claim-method-select\",\n        value: claimMethod,\n        label: \"Claim Method\",\n        onChange: e => {\n          localStorage.setItem(\"claimMethod\", e.target.value);\n          setClaimMethod(e.target.value);\n        },\n        style: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"transfer\",\n          children: \"Token Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"candy\",\n          children: \"Candy Machine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"edition\",\n          children: \"Limited Edition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 7\n    }, this), claimMethod !== \"\" && claimData(claimMethod), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"comm-method-label\",\n        children: \"Distribution Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"comm-method-label\",\n        id: \"comm-method-select\",\n        value: commMethod,\n        label: \"Distribution Method\",\n        onChange: e => {\n          if (e.target.value === \"Discord\") {\n            notify({\n              message: \"Discord distribution unavailable\",\n              description: \"Please use the CLI for this. Discord does not support browser-connection requests\"\n            });\n            return;\n          }\n\n          localStorage.setItem(\"commMethod\", e.target.value);\n          setCommMethod(e.target.value);\n        },\n        style: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"AWS SES\",\n          children: \"AWS SES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Discord\",\n          children: \"Discord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Wallets\",\n          children: \"Wallets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Manual\",\n          children: \"Manual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 7\n    }, this), commMethod !== \"\" && commAuthorization(commMethod), commMethod !== \"\" && commMethod !== \"Wallets\" && otpAuthC, commMethod !== \"\" && fileUpload, createAirdrop, claimURLs.length > 0 && /*#__PURE__*/_jsxDEV(HyperLink, {\n      href: hyperLinkData(claimURLs),\n      download: \"claimURLs.json\",\n      underline: \"none\",\n      style: {\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          width: \"100%\"\n        },\n        children: \"Download claim URLs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 9\n    }, this), responses.length > 0 && /*#__PURE__*/_jsxDEV(HyperLink, {\n      href: hyperLinkData(responses),\n      download: \"responses.json\",\n      underline: \"none\",\n      style: {\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          width: \"100%\"\n        },\n        children: \"Download distribution responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 753,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"ixUhaBn2OcrBLFCfZ5WCjqOgO9A=\", false, function () {\n  return [useConnection, useWallet];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/Diego/metaplex/js/packages/gumdrop/src/components/Create.tsx"],"names":["React","ReactDOM","Box","Button","CircularProgress","FormControl","Link","HyperLink","InputLabel","MenuItem","Stack","Select","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","FilePresentIcon","useWallet","Keypair","PublicKey","notify","shortenAddress","BN","useConnection","Connection","GUMDROP_DISTRIBUTOR_ID","GUMDROP_TEMPORAL_SIGNER","buildGumdrop","dropInfoFor","parseClaimants","validateTransferClaims","validateCandyClaims","validateEditionClaims","distributeAwsSes","distributeManual","distributeWallet","urlAndHandleFor","envFor","explorerLinkFor","DragAndDrop","DefaultModal","randomBytes","buf","Uint8Array","window","crypto","getRandomValues","WHITESPACE","distribute","method","auth","source","claimants","drop","Error","reactModal","renderModal","container","document","createElement","body","appendChild","displayModal","onSubmit","onDismiss","render","show","hideModal","callback","destroyModal","unmountComponentAtNode","removeChild","confirmation","Promise","resolve","value","undefined","finally","resendOnlyRender","options","click","name","color","fontSize","marginTop","width","map","opt","marginBottom","displayMintTokens","amount","mintInfo","String","Math","pow","decimals","hyperLinkData","data","encoded","encodeURIComponent","JSON","stringify","shouldSendRender","needsPin","claimMethod","claimInfo","baseKey","limit","ClaimPreviewC","fontWeight","length","textAlign","backgroundColor","borderRadius","maxHeight","slice","c","idx","border","handle","mint","info","edition","pin","toNumber","height","Array","from","secretKey","publicKey","toBase58","Create","connection","wallet","setClaimMethod","useState","localStorage","getItem","candyConfig","setCandyConfig","candyUUID","setCandyUUID","setMint","masterMint","setMasterMint","filename","setFilename","text","setText","claimURLs","setClaimURLs","responses","setResponses","otpAuth","setOtpAuth","commMethod","setCommMethod","commAuth","setCommAuth","commSource","setCommSource","awsAccessKeyId","setAwsAccessKeyId","awsSecretKey","setAwsSecretKey","explorerUrlFor","key","distributeClaims","console","log","message","submit","e","preventDefault","connected","dropInfo","mightHaveExisting","url","reduce","acc","resendOnly","forEach","seed","config","temporalSigner","default","base","generate","instructions","location","origin","shouldSend","createResult","sendTransactionWithRetry","description","txid","handleFiles","files","file","reader","FileReader","onload","target","result","readAsText","claimData","setItem","commAuthorization","prev","accessKeyId","secretAccessKey","fileUpload","justifyContent","alignContent","padding","loading","setLoading","loadingProgress","position","top","left","marginLeft","createAirdrop","wrap","err","otpAuthC"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Link as HyperLink,\r\n  InputLabel,\r\n  MenuItem,\r\n  Stack,\r\n  Select,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport FilePresentIcon from '@mui/icons-material/FilePresent';\r\n\r\nimport {\r\n  useWallet,\r\n} from \"@solana/wallet-adapter-react\";\r\nimport {\r\n  Keypair,\r\n  PublicKey,\r\n} from \"@solana/web3.js\";\r\nimport {\r\n  MintInfo,\r\n} from \"@solana/spl-token\";\r\nimport {\r\n  notify,\r\n  shortenAddress,\r\n} from \"@oyster/common\";\r\nimport BN from 'bn.js';\r\n\r\nimport {\r\n  useConnection,\r\n  Connection,\r\n} from \"../contexts\";\r\nimport {\r\n  GUMDROP_DISTRIBUTOR_ID,\r\n  GUMDROP_TEMPORAL_SIGNER,\r\n} from \"../utils/ids\";\r\nimport {\r\n  ClaimantInfo,\r\n  Claimants,\r\n  buildGumdrop,\r\n  dropInfoFor,\r\n  parseClaimants,\r\n  validateTransferClaims,\r\n  validateCandyClaims,\r\n  validateEditionClaims,\r\n} from \"../utils/claimant\";\r\nimport {\r\n  AuthKeys,\r\n  DropInfo,\r\n  Response as DResponse,\r\n  distributeAwsSes,\r\n  distributeManual,\r\n  distributeWallet,\r\n  urlAndHandleFor,\r\n} from \"../utils/communication\";\r\nimport {\r\n  envFor,\r\n  explorerLinkFor,\r\n} from \"../utils/transactions\";\r\nimport { DragAndDrop } from \"./DragAndDrop\";\r\nimport { DefaultModal } from \"./DefaultModal\";\r\n\r\n// NB: assumes no overflow\r\nconst randomBytes = () : Uint8Array => {\r\n  // TODO: some predictable seed? sha256?\r\n  const buf = new Uint8Array(4);\r\n  window.crypto.getRandomValues(buf);\r\n  return buf;\r\n}\r\n\r\nconst WHITESPACE = \"\\u00A0\";\r\n\r\nconst distribute = (\r\n  method : string,\r\n  auth : AuthKeys,\r\n  source : string,\r\n  claimants : Claimants,\r\n  drop : DropInfo,\r\n) => {\r\n  if (method === \"AWS SES\") {\r\n    return distributeAwsSes(auth, source, claimants, drop);\r\n  } else if (method === \"Manual\") {\r\n    return distributeManual(auth, source, claimants, drop);\r\n  } else if (method === \"Wallets\") {\r\n    return distributeWallet(auth, source, claimants, drop);\r\n  } else {\r\n    throw new Error(`Unrecognized claim distribution method ${method}`);\r\n  }\r\n}\r\n\r\nconst reactModal = (renderModal) => {\r\n  const container = document.createElement('div');\r\n  document.body.appendChild(container);\r\n\r\n  const displayModal = ({ onSubmit, onDismiss }) => {\r\n    ReactDOM.render(renderModal({ onSubmit, onDismiss, show: true }), container);\r\n  };\r\n\r\n  const hideModal = ({ onSubmit, onDismiss }, callback) => {\r\n    ReactDOM.render(renderModal({ onSubmit, onDismiss, show: false }), container, callback);\r\n  };\r\n\r\n  const destroyModal = () => {\r\n    ReactDOM.unmountComponentAtNode(container);\r\n    document.body.removeChild(container);\r\n  };\r\n\r\n  const confirmation = new Promise((resolve) => {\r\n    const onSubmit = (value) => resolve(value);\r\n    const onDismiss = () => resolve(undefined);\r\n    displayModal({ onSubmit, onDismiss });\r\n  });\r\n\r\n  return confirmation.finally(() => {\r\n    const onSubmit = () => {};\r\n    const onDismiss = () => {};\r\n    hideModal({ onSubmit, onDismiss }, destroyModal);\r\n  });\r\n};\r\n\r\nconst resendOnlyRender = ({ show, onSubmit, onDismiss }) => {\r\n  const options = [\r\n    { click: () => onSubmit(\"create\"), name: \"Create and Send\" },\r\n    { click: () => onSubmit(\"send\")  , name: \"Send only\"       },\r\n  ];\r\n  return (\r\n    <DefaultModal visible={show} onCancel={onDismiss} width=\"70ch\">\r\n      <p style={{\r\n        color: \"white\",\r\n        fontSize: \"0.9rem\",\r\n        marginTop: 8,\r\n        width: \"90%\",\r\n      }}>\r\n        Uploaded distribution list has URLs for all claimants.\r\n        Skip creation of airdrop and only re-send links?\r\n      </p>\r\n      <br />\r\n      <Stack direction=\"row\" spacing={2} style={{width: \"100%\"}}>\r\n      {options.map((opt) => {\r\n        return (\r\n          <Button\r\n            key={opt.name}\r\n            style={{\r\n              width: \"100%\",\r\n              color: \"white\",\r\n              marginBottom: 8,\r\n            }}\r\n            variant=\"outlined\"\r\n            onClick={opt.click}\r\n          >\r\n            {opt.name}\r\n          </Button>\r\n        );\r\n      })}\r\n      </Stack>\r\n    </DefaultModal>\r\n  );\r\n};\r\n\r\nconst displayMintTokens = (amount : number, mintInfo : MintInfo) : string => {\r\n  // TODO: better decimal rounding\r\n  return String(amount / Math.pow(10, mintInfo.decimals));\r\n};\r\n\r\nconst hyperLinkData = (data) => {\r\n  const encoded = encodeURIComponent(JSON.stringify(data));\r\n  return `data:text/plain;charset=utf-8,${encoded}`;\r\n};\r\n\r\nconst shouldSendRender = (claimants, needsPin, claimMethod, claimInfo, baseKey) => {\r\n  const limit = 1000;\r\n  // eslint-disable-next-line react/prop-types\r\n  return function ClaimPreviewC({ show, onSubmit, onDismiss }) {\r\n    return (\r\n      <DefaultModal visible={show} onCancel={onDismiss} width=\"70ch\">\r\n        <h2\r\n          style={{\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.2rem\",\r\n          }}\r\n        >\r\n          Claim Distribution Preview{claimants.length > limit ? ` (First ${limit})` : \"\"}\r\n        </h2>\r\n        <p style={{ color: \"white\", fontSize: \"1rem\", textAlign: \"center\" }}>\r\n          Approving will save the keypair authority generated for gumdrop\r\n          state. This keypair is necessary to close the gumdrop later!\r\n        </p>\r\n        <TableContainer\r\n          sx={{\r\n            \"td, th\": { color: \"white\" },\r\n            backgroundColor: \"#444444\",\r\n            borderRadius: \"5px\",\r\n            maxHeight: \"30ch\",\r\n          }}\r\n        >\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Handle</TableCell>\r\n                <TableCell>\r\n                  {claimMethod === \"edition\"\r\n                    ? \"Edition\"\r\n                    : \"Tokens\"\r\n                  }\r\n                </TableCell>\r\n                {needsPin && <TableCell>Pin</TableCell>}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {claimants.slice(0, limit).map((c, idx) => (\r\n                <TableRow\r\n                  key={idx}\r\n                  sx={{ 'td, th': { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">{c.handle} </TableCell>\r\n                  <TableCell>\r\n                    { claimMethod === \"transfer\" ? displayMintTokens(c.amount, claimInfo.mint.info)\r\n                    : claimMethod === \"candy\"    ? c.amount\r\n                    : /* === \"edition\" */          c.edition\r\n                    }\r\n                  </TableCell>\r\n                  {needsPin && <TableCell>{c.pin.toNumber()}</TableCell>}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box style={{ height: \"3ch\" }} />\r\n        <Stack direction=\"row\" spacing={2} style={{width: \"100%\"}}>\r\n          <Button\r\n            style={{\r\n              width: \"100%\",\r\n              color: \"white\",\r\n              marginBottom: 8,\r\n            }}\r\n            variant=\"outlined\"\r\n            onClick={() => onSubmit(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <HyperLink\r\n            href={hyperLinkData(Array.from(baseKey.secretKey))}\r\n            download={`${baseKey.publicKey.toBase58()}.json`}\r\n            underline=\"none\"\r\n            style={{width: \"100%\"}}\r\n          >\r\n            <Button\r\n              style={{\r\n                width: \"100%\",\r\n                color: \"white\",\r\n                marginBottom: 8,\r\n              }}\r\n              variant=\"outlined\"\r\n              onClick={() => onSubmit(true)}\r\n            >\r\n              Approve\r\n            </Button>\r\n          </HyperLink>\r\n        </Stack>\r\n      </DefaultModal>\r\n    );\r\n  }\r\n};\r\n\r\nexport const Create = () => {\r\n  const connection = useConnection();\r\n  const wallet = useWallet();\r\n\r\n  // claim state\r\n  const [claimMethod, setClaimMethod] = React.useState(localStorage.getItem(\"claimMethod\") || \"\");\r\n  const [candyConfig, setCandyConfig] = React.useState(localStorage.getItem(\"candyConfig\") || \"\");\r\n  const [candyUUID, setCandyUUID] = React.useState(localStorage.getItem(\"candyUUID\") || \"\");\r\n  const [mint, setMint] = React.useState(localStorage.getItem(\"mint\") || \"\");\r\n  const [masterMint, setMasterMint] = React.useState(localStorage.getItem(\"masterMint\") || \"\");\r\n  const [filename, setFilename] = React.useState(\"\");\r\n  const [text, setText] = React.useState(\"\");\r\n\r\n  // response state\r\n  const [claimURLs, setClaimURLs] = React.useState<Array<{ [key: string]: any }>>([]);\r\n  const [responses, setResponses] = React.useState<Array<DResponse>>([]);\r\n\r\n  // auth state\r\n  const [otpAuth, setOtpAuth] = React.useState(localStorage.getItem(\"otpAuth\") || \"default\");\r\n  const [commMethod, setCommMethod] = React.useState(localStorage.getItem(\"commMethod\") || \"\");\r\n  const [commAuth, setCommAuth] = React.useState<AuthKeys>({});\r\n  const [commSource, setCommSource] = React.useState(localStorage.getItem(\"commSource\") || \"\");\r\n  const [awsAccessKeyId, setAwsAccessKeyId] = React.useState(\"\");\r\n  const [awsSecretKey, setAwsSecretKey] = React.useState(\"\");\r\n\r\n  const explorerUrlFor = (key : PublicKey) => {\r\n    return `https://explorer.solana.com/address/${key.toBase58()}?cluster=${envFor(connection)}`;\r\n  }\r\n\r\n  const distributeClaims = async (claimants, drop) => {\r\n    const responses = await distribute(\r\n      commMethod, commAuth, commSource, claimants, drop);\r\n\r\n    console.log(\"Responses\", responses);\r\n    setResponses(responses);\r\n\r\n    // notify if the above routine is actually supposed to do anything\r\n    // (manual and wallet do nothing atm)\r\n    if (commMethod === \"AWS SES\") {\r\n      notify({\r\n        message: \"Gumdrop email distribution completed\",\r\n      });\r\n    }\r\n  }\r\n\r\n  const submit = async (e : React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    setClaimURLs([]);\r\n    setResponses([]);\r\n\r\n    if (!wallet.connected || wallet.publicKey === null) {\r\n      throw new Error(`Wallet not connected`);\r\n    }\r\n\r\n    const claimants = parseClaimants(text, filename, commMethod);\r\n    if (claimants.length === 0) {\r\n      throw new Error(`No claimants provided`);\r\n    }\r\n\r\n    const dropInfo = dropInfoFor(envFor(connection), claimMethod, mint, candyConfig, masterMint);\r\n    // check that auth is correct...\r\n    await distribute(\r\n      commMethod, commAuth, commSource, [], dropInfo);\r\n\r\n    const mightHaveExisting = (info : ClaimantInfo) => {\r\n      return info.url !== undefined && info.url !== null;\r\n    };\r\n    if (claimants.reduce((acc, c) => acc && mightHaveExisting(c), true)) {\r\n      const resendOnly = await reactModal(resendOnlyRender);\r\n      console.log(\"Resend only\", resendOnly);\r\n      if (resendOnly === \"send\") {\r\n        setClaimURLs(urlAndHandleFor(claimants));\r\n        await distributeClaims(claimants, dropInfo);\r\n        return;\r\n      } else if (resendOnly === \"create\") {\r\n        // fallthrough to full create\r\n      } else {\r\n        // dismissed. don't use exceptions for control flow?\r\n        throw new Error(\"Dismissed\");\r\n      }\r\n    }\r\n\r\n\r\n    let claimInfo;\r\n    switch (claimMethod) {\r\n      case \"transfer\": {\r\n        claimInfo = await validateTransferClaims(\r\n          connection,\r\n          wallet.publicKey,\r\n          claimants,\r\n          mint,\r\n        );\r\n        break;\r\n      }\r\n      case \"candy\": {\r\n        claimInfo = await validateCandyClaims(\r\n          connection,\r\n          wallet.publicKey,\r\n          claimants,\r\n          candyConfig,\r\n          candyUUID,\r\n        );\r\n        break;\r\n      }\r\n      case \"edition\": {\r\n        claimInfo = await validateEditionClaims(\r\n          connection,\r\n          wallet.publicKey,\r\n          claimants,\r\n          masterMint,\r\n        );\r\n        break;\r\n      }\r\n      default:\r\n        throw new Error(`Unknown claim method ${claimMethod}`);\r\n    }\r\n    console.log(\"Claims info\", claimInfo);\r\n\r\n    claimants.forEach(c => {\r\n      c.pin = new BN(randomBytes());\r\n      c.seed = claimMethod === \"transfer\" ? claimInfo.mint.key\r\n             : claimMethod === \"candy\"    ? claimInfo.config\r\n             : /* === edition */            claimInfo.masterMint.key;\r\n    });\r\n\r\n    // temporal auth is the AWS signer by 'default' and a no-op key otherwise\r\n    let temporalSigner;\r\n    if (commMethod === \"Wallets\") {\r\n      // TODO: this is a bit jank. There should be no form option to set the\r\n      // OTP auth if we are using a wallet but there's still a defaulted value\r\n      // atm...\r\n      // NB: We also need this to not be 'none' since there is a special check\r\n      // for claimant_secret==accounts.temporal\r\n      temporalSigner = GUMDROP_DISTRIBUTOR_ID;\r\n    } else if (otpAuth === \"default\") {\r\n      temporalSigner = GUMDROP_TEMPORAL_SIGNER;\r\n    } else if (otpAuth === \"none\") {\r\n      temporalSigner = PublicKey.default;\r\n    } else {\r\n      throw new Error(`Unknown OTP authorization type ${otpAuth}`);\r\n    }\r\n\r\n    console.log(`Temporal signer: ${temporalSigner.toBase58()}`);\r\n\r\n    const base = Keypair.generate();\r\n    console.log(`Base ${base.publicKey.toBase58()}`);\r\n\r\n    const needsPin = commMethod !== \"Wallets\";\r\n    const instructions = await buildGumdrop(\r\n      connection,\r\n      wallet.publicKey,\r\n      needsPin,\r\n      claimMethod,\r\n      `${window.location.origin}/gumdrop`,\r\n      base.publicKey,\r\n      temporalSigner,\r\n      claimants,\r\n      claimInfo\r\n    );\r\n\r\n    const shouldSend = await reactModal(\r\n      shouldSendRender(claimants, needsPin, claimMethod, claimInfo, base)\r\n    ) as boolean | undefined;\r\n    if (shouldSend !== true) {\r\n      // dismissed. don't use exceptions for control flow?\r\n      throw new Error(\"Claim distribution preview not approved\");\r\n    }\r\n\r\n\r\n    setClaimURLs(urlAndHandleFor(claimants));\r\n\r\n    const createResult = await Connection.sendTransactionWithRetry(\r\n      connection,\r\n      wallet,\r\n      instructions,\r\n      [base]\r\n    );\r\n\r\n    console.log(createResult);\r\n    if (typeof createResult === \"string\") {\r\n      throw new Error(createResult);\r\n    } else {\r\n      notify({\r\n        message: \"Gumdrop creation succeeded\",\r\n        description: (\r\n          <HyperLink href={explorerLinkFor(createResult.txid, connection)}>\r\n            View transaction on explorer\r\n          </HyperLink>\r\n        ),\r\n      });\r\n    }\r\n\r\n    console.log(\"Distributing claim URLs\");\r\n    await distributeClaims(claimants, dropInfo);\r\n  };\r\n\r\n  const handleFiles = (files : FileList | null) => {\r\n    if (files === null || files.length !== 1) {\r\n      notify({\r\n        message: \"File upload failed\",\r\n        description: `Received ${files?.length} files`,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const file = files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      if (e !== null && e.target !== null) {\r\n        if (typeof e.target.result === \"string\") {\r\n          try {\r\n            parseClaimants(e.target.result, file.name, commMethod);\r\n          } catch {\r\n            notify({\r\n              message: `File upload failed for: ${file.name}`,\r\n              description: (\r\n                <span>\r\n                  Could not parse uploaded file.{WHITESPACE}\r\n                  <HyperLink href=\"#/\">\r\n                    Does it follow the JSON scheme?\r\n                  </HyperLink>\r\n                </span>\r\n              ),\r\n            });\r\n            setFilename(\"\");\r\n            setText(\"\");\r\n            return;\r\n          }\r\n          setFilename(file.name);\r\n          setText(e.target.result);\r\n        } else {\r\n          notify({\r\n            message: `File upload failed for: ${file.name}`,\r\n            description: \"Could not read uploaded file\",\r\n          });\r\n        }\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const claimData = (claimMethod) => {\r\n    if (claimMethod === \"candy\") {\r\n      return (\r\n        <React.Fragment>\r\n          <TextField\r\n            id=\"config-text-field\"\r\n            label=\"Candy Config\"\r\n            value={candyConfig}\r\n            onChange={e => {\r\n              setCandyConfig(e.target.value);\r\n              localStorage.setItem(\"candyConfig\", e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"config-uuid-text-field\"\r\n            label=\"Candy UUID\"\r\n            value={candyUUID}\r\n            onChange={e => {\r\n              setCandyUUID(e.target.value);\r\n              localStorage.setItem(\"candyUUID\", e.target.value);\r\n            }}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    } else if (claimMethod === \"transfer\") {\r\n      return (\r\n        <TextField\r\n          id=\"mint-text-field\"\r\n          label=\"Mint\"\r\n          value={mint}\r\n          onChange={(e) => {\r\n            localStorage.setItem(\"mint\", e.target.value);\r\n            setMint(e.target.value);\r\n          }}\r\n        />\r\n      );\r\n    } else if (claimMethod === \"edition\") {\r\n      // transfers master mint token from this account to the distributor\r\n      // wallet ATA\r\n      return (\r\n        <TextField\r\n          id=\"master-mint-text-field\"\r\n          label=\"Master Mint\"\r\n          value={masterMint}\r\n          onChange={(e) => {\r\n            localStorage.setItem(\"masterMint\", e.target.value);\r\n            setMasterMint(e.target.value);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const commAuthorization = (commMethod) => {\r\n    if (commMethod === \"AWS SES\") {\r\n      return (\r\n        <React.Fragment>\r\n          <TextField\r\n            id=\"comm-access-key-id-field\"\r\n            label={`${commMethod} Access Key Id`}\r\n            value={awsAccessKeyId}\r\n            onChange={(e) => {\r\n              setCommAuth(prev => ({...prev, accessKeyId: e.target.value}));\r\n              setAwsAccessKeyId(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"comm-secret-access-key-field\"\r\n            label={`${commMethod} Secret Access Key`}\r\n            value={awsSecretKey}\r\n            onChange={(e) => {\r\n              setCommAuth(prev => ({...prev, secretAccessKey: e.target.value}));\r\n              setAwsSecretKey(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"comm-source-field\"\r\n            label={`${commMethod} Source`}\r\n            value={commSource}\r\n            onChange={(e) => {\r\n              localStorage.setItem(\"commSource\", e.target.value);\r\n              setCommSource(e.target.value)\r\n            }}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    // commMethod === \"Manual\" || commMethod === \"Wallets\"\r\n    return null;\r\n  };\r\n\r\n  const fileUpload = (\r\n    <React.Fragment>\r\n      <DragAndDrop handleDrop={handleFiles} >\r\n        <Stack\r\n          direction=\"row\"\r\n          style={{\r\n            height: \"15ch\",\r\n          }}\r\n          sx={{\r\n            border: '1px dashed grey',\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"text\"\r\n            component=\"label\"\r\n            style={{\r\n              padding: 0,\r\n              // don't make the button click field too large...\r\n              marginTop: \"5ch\",\r\n              marginBottom: \"5ch\",\r\n            }}\r\n          >\r\n            Upload a {filename === \"\" ? \"distribution\" : \"different\"} list\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                handleFiles(e.target.files);\r\n                // re-parse every time...\r\n                e.target.value = '';\r\n              }}\r\n              hidden\r\n            />\r\n          </Button>\r\n          {WHITESPACE}\r\n          {/*For display alignment...*/}\r\n          <Button\r\n            variant=\"text\"\r\n            component=\"label\"\r\n            disabled={true}\r\n            style={{\r\n              padding: 0,\r\n              color: \"#eee\",\r\n            }}\r\n          >\r\n            or drag it here\r\n          </Button>\r\n        </Stack>\r\n      </DragAndDrop>\r\n      {filename !== \"\"\r\n      ? (<Button\r\n            variant=\"text\"\r\n            component=\"label\"\r\n            disabled={true}\r\n            style={{\r\n              padding: 0,\r\n              color: \"#eee\",\r\n            }}\r\n          >\r\n            <FilePresentIcon />\r\n            <span>{WHITESPACE} Uploaded {filename}</span>\r\n          </Button>\r\n        )\r\n      : (<Box/>)}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const loadingProgress = () => (\r\n    <CircularProgress\r\n      size={24}\r\n      sx={{\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: '-12px',\r\n        marginLeft: '-12px',\r\n      }}\r\n    />\r\n  );\r\n  const createAirdrop = (\r\n    <Box sx={{ position: \"relative\" }}>\r\n    <Button\r\n      disabled={!wallet.connected || !commMethod || !filename || loading}\r\n      variant=\"contained\"\r\n      style={{ width: \"100%\" }}\r\n      onClick={(e) => {\r\n        setLoading(true);\r\n        const wrap = async () => {\r\n          try {\r\n            await submit(e);\r\n            setLoading(false);\r\n          } catch (err) {\r\n            notify({\r\n              message: \"Create failed\",\r\n              description: `${err}`,\r\n            });\r\n            setLoading(false);\r\n          }\r\n        };\r\n        wrap();\r\n      }}\r\n    >\r\n      Create{claimURLs.length > 0 ? \" Another \" : \" \"}Gumdrop\r\n    </Button>\r\n    {loading && loadingProgress()}\r\n    </Box>\r\n  );\r\n\r\n  const otpAuthC = (\r\n    <React.Fragment>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"otp-auth-label\">OTP Authorization</InputLabel>\r\n        <Select\r\n          labelId=\"otp-auth-label\"\r\n          id=\"otp-auth-select\"\r\n          value={otpAuth}\r\n          label=\"OTP Authorization\"\r\n          onChange={(e) => {\r\n            localStorage.setItem(\"otpAuth\", e.target.value);\r\n            setOtpAuth(e.target.value);\r\n          }}\r\n          style={{textAlign: \"left\"}}\r\n        >\r\n          <MenuItem value={\"default\"}>\r\n            Default{WHITESPACE}\r\n            <HyperLink\r\n              href={explorerUrlFor(GUMDROP_TEMPORAL_SIGNER)}\r\n              underline=\"none\"\r\n              target=\"_blank\" rel=\"noopener noreferrer\"\r\n            >\r\n              ({shortenAddress(GUMDROP_TEMPORAL_SIGNER.toBase58())})\r\n            </HyperLink>\r\n          </MenuItem>\r\n          <MenuItem value={\"none\"}>None</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Stack spacing={2}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"claim-method-label\">Claim Method</InputLabel>\r\n        <Select\r\n          labelId=\"claim-method-label\"\r\n          id=\"claim-method-select\"\r\n          value={claimMethod}\r\n          label=\"Claim Method\"\r\n          onChange={(e) => {\r\n            localStorage.setItem(\"claimMethod\", e.target.value);\r\n            setClaimMethod(e.target.value);\r\n          }}\r\n          style={{textAlign: \"left\"}}\r\n        >\r\n          <MenuItem value={\"transfer\"}>Token Transfer</MenuItem>\r\n          <MenuItem value={\"candy\"}>Candy Machine</MenuItem>\r\n          <MenuItem value={\"edition\"}>Limited Edition</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      {claimMethod !== \"\" && claimData(claimMethod)}\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"comm-method-label\">Distribution Method</InputLabel>\r\n        <Select\r\n          labelId=\"comm-method-label\"\r\n          id=\"comm-method-select\"\r\n          value={commMethod}\r\n          label=\"Distribution Method\"\r\n          onChange={(e) => {\r\n            if (e.target.value === \"Discord\") {\r\n              notify({\r\n                message: \"Discord distribution unavailable\",\r\n                description: \"Please use the CLI for this. Discord does not support browser-connection requests\",\r\n              });\r\n              return;\r\n            }\r\n            localStorage.setItem(\"commMethod\", e.target.value);\r\n            setCommMethod(e.target.value);\r\n          }}\r\n          style={{textAlign: \"left\"}}\r\n        >\r\n          <MenuItem value={\"AWS SES\"}>AWS SES</MenuItem>\r\n          <MenuItem value={\"Discord\"}>Discord</MenuItem>\r\n          <MenuItem value={\"Wallets\"}>Wallets</MenuItem>\r\n          <MenuItem value={\"Manual\"}>Manual</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      {commMethod !== \"\" && commAuthorization(commMethod)}\r\n      {commMethod !== \"\" && commMethod !== \"Wallets\" && otpAuthC}\r\n      {commMethod !== \"\" && fileUpload}\r\n      {createAirdrop}\r\n      {claimURLs.length > 0 && (\r\n        <HyperLink\r\n          href={hyperLinkData(claimURLs)}\r\n          download=\"claimURLs.json\"\r\n          underline=\"none\"\r\n          style={{width: \"100%\"}}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{width: \"100%\"}}\r\n          >\r\n            Download claim URLs\r\n          </Button>\r\n        </HyperLink>\r\n      )}\r\n      {responses.length > 0 && (\r\n        <HyperLink\r\n          href={hyperLinkData(responses)}\r\n          download=\"responses.json\"\r\n          underline=\"none\"\r\n          style={{width: \"100%\"}}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{width: \"100%\"}}\r\n          >\r\n            Download distribution responses\r\n          </Button>\r\n        </HyperLink>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}