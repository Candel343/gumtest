{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diego\\\\metaplex\\\\js\\\\packages\\\\gumdrop\\\\src\\\\contexts\\\\ColorModeContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useTheme } from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorModeContext = /*#__PURE__*/React.createContext({});\nexport const ColorModeContextProvider = ({\n  children = undefined\n}) => {\n  _s();\n\n  const [mode, setMode] = React.useState('dark');\n  const theme = useTheme();\n\n  const toggleColorMode = () => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: {\n      toggleColorMode,\n      mode,\n      theme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ColorModeContextProvider, \"MB9d4mikNj4TrMHI3C97Yf4YVoI=\", false, function () {\n  return [useTheme];\n});\n\n_c = ColorModeContextProvider;\nexport const useColorMode = () => {\n  _s2();\n\n  const context = useContext(ColorModeContext);\n  return context;\n};\n\n_s2(useColorMode, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorModeContextProvider\");","map":{"version":3,"sources":["C:/Users/Diego/metaplex/js/packages/gumdrop/src/contexts/ColorModeContext.tsx"],"names":["useTheme","React","useContext","ColorModeContext","createContext","ColorModeContextProvider","children","undefined","mode","setMode","useState","theme","toggleColorMode","prevMode","useColorMode","context"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGF,KAAK,CAACG,aAAN,CAAoB,EAApB,CAAzB;AAEP,OAAO,MAAMC,wBAAwB,GAAG,CAAC;AAAEC,EAAAA,QAAQ,GAAGC;AAAb,CAAD,KAA+D;AAAA;;AACrG,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAiC,MAAjC,CAAxB;AACA,QAAMC,KAAK,GAAGX,QAAQ,EAAtB;;AACA,QAAMY,eAAe,GAAG,MAAM;AAC5BH,IAAAA,OAAO,CAAEI,QAAD,IAAeA,QAAQ,KAAK,OAAb,GAAuB,MAAvB,GAAgC,OAAhD,CAAP;AACD,GAFD;;AAGA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,eADK;AAELJ,MAAAA,IAFK;AAGLG,MAAAA;AAHK,KADT;AAAA,cAOGL;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjBM;;GAAMD,wB;UAEGL,Q;;;KAFHK,wB;AAmBb,OAAO,MAAMS,YAAY,GAAG,MAAW;AAAA;;AACrC,QAAMC,OAAO,GAAGb,UAAU,CAACC,gBAAD,CAA1B;AACA,SAAOY,OAAP;AACD,CAHM;;IAAMD,Y","sourcesContent":["import { useTheme } from \"@mui/material\";\r\nimport React, { useContext } from \"react\";\r\n\r\nexport const ColorModeContext = React.createContext({});\r\n\r\nexport const ColorModeContextProvider = ({ children = undefined } : { children : React.ReactNode }) => {\r\n  const [mode, setMode] = React.useState<'light' | 'dark'>('dark'); \r\n  const theme = useTheme();\r\n  const toggleColorMode = () => {\r\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n  }\r\n  return (\r\n    <ColorModeContext.Provider\r\n      value={{\r\n        toggleColorMode,\r\n        mode,\r\n        theme,\r\n      }}\r\n    >\r\n      {children}\r\n    </ColorModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useColorMode = (): any => {\r\n  const context = useContext(ColorModeContext);\r\n  return context;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}