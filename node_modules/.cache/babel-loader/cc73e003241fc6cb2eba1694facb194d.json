{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diego\\\\metaplex\\\\js\\\\packages\\\\gumdrop\\\\src\\\\components\\\\Settings\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { ENDPOINTS, useColorMode, useConnectionConfig } from \"../../contexts\";\nimport { notify, shortenAddress } from \"@oyster/common\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport { ModalEnum, useModal, useWalletModal } from \"../../contexts\";\nimport { Box, Button, Collapse, Divider, Drawer, FormControl, Link, List, ListItem, ListItemText, ListItemButton, MenuItem, Select, Stack } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Settings = ({\n  narrow\n}) => {\n  _s();\n\n  const {\n    disconnect,\n    publicKey\n  } = useWallet();\n  const {\n    setEndpoint,\n    env,\n    endpoint\n  } = useConnectionConfig();\n  const {\n    setVisible\n  } = useWalletModal();\n  const open = React.useCallback(() => setVisible(true), [setVisible]);\n  const {\n    setModal\n  } = useModal();\n  const theme = useTheme();\n  const colorModeCtx = useColorMode();\n  const handleConnect = React.useCallback(() => {\n    setModal(ModalEnum.WALLET);\n    setVisible(true);\n  }, [setModal, setVisible]);\n  const connectedActions = [{\n    click: async () => {\n      if (publicKey) {\n        await navigator.clipboard.writeText(publicKey.toBase58());\n        notify({\n          message: \"Wallet update\",\n          description: \"Address copied to clipboard\"\n        });\n      }\n    },\n    innerNarrow: () => `Copy Address (${publicKey && shortenAddress(publicKey.toBase58())})`,\n    inner: function ConnectedWalletCopyC() {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CopyOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), publicKey && shortenAddress(publicKey.toBase58())]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    click: open,\n    inner: () => \"Change\\u00A0Wallet\"\n  }, {\n    click: () => disconnect().catch(),\n    inner: () => `Disconnect\\u00A0(${env})`,\n    expandedExtra: {\n      // these are interepreted as props. TODO: specific types\n      color: \"error\",\n      variant: \"contained\"\n    }\n  }];\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [envCollapseOpen, setEnvCollapseOpen] = React.useState(false);\n  const hackySkipSet = \"hackySkipSet\";\n\n  const toggleDrawer = open => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    if (event.target.classList.contains(hackySkipSet)) {\n      return;\n    }\n\n    setDrawerOpen(open);\n  };\n\n  const drawerC = inner => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(true),\n        children: /*#__PURE__*/_jsxDEV(AccountBalanceWalletIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: \"right\",\n        open: drawerOpen,\n        onClose: toggleDrawer(false),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 250\n          },\n          role: \"presentation\",\n          onClick: toggleDrawer(false),\n          onKeyDown: toggleDrawer(false),\n          children: inner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  };\n\n  const themeSwitch = /*#__PURE__*/_jsxDEV(Button, {\n    sx: {\n      ml: 1\n    },\n    onClick: colorModeCtx.toggleColorMode,\n    color: \"inherit\",\n    children: theme.palette.mode === \"dark\" ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n\n  if (narrow) {\n    const listHead = /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: \"Wallet\",\n        primaryTypographyProps: {\n          fontSize: \"1.2rem\",\n          fontWeight: 'medium',\n          letterSpacing: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [!publicKey && drawerC( /*#__PURE__*/_jsxDEV(List, {\n        children: [listHead, /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemButton, {\n          onClick: () => setEnvCollapseOpen(!envCollapseOpen),\n          className: hackySkipSet,\n          children: [\"Change Network\", envCollapseOpen ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: envCollapseOpen,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"div\",\n            disablePadding: true,\n            children: ENDPOINTS.map(p => /*#__PURE__*/_jsxDEV(ListItemButton, {\n              selected: endpoint === p.endpoint,\n              onClick: () => setEndpoint(p.endpoint),\n              sx: {\n                pl: 4\n              },\n              className: hackySkipSet,\n              children: p.name\n            }, p.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemButton, {\n          onClick: handleConnect,\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)), publicKey && drawerC( /*#__PURE__*/_jsxDEV(List, {\n        children: [listHead, /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), connectedActions.map((a, idx) => {\n          return /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: a.click,\n            children: a.innerNarrow && a.innerNarrow() || a.inner()\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)), themeSwitch]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      sx: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        marginRight: \"36px\"\n      },\n      children: [!publicKey && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"standard\",\n          style: {\n            minWidth: \"10ch\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            id: \"connected-env-select\",\n            onChange: e => {\n              setEndpoint(e.target.value);\n            },\n            value: endpoint,\n            children: ENDPOINTS.map(({\n              name,\n              endpoint\n            }) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: endpoint,\n              children: name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          underline: \"none\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleConnect,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), publicKey && connectedActions.map((a, idx) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: a.click,\n          ...a.expandedExtra,\n          children: a.inner()\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this);\n      }), themeSwitch]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Settings, \"FNuSZ9Fd2NVELFLfSSI+PGnXlb8=\", false, function () {\n  return [useWallet, useConnectionConfig, useWalletModal, useModal, useTheme, useColorMode];\n});\n\n_c = Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/Diego/metaplex/js/packages/gumdrop/src/components/Settings/index.tsx"],"names":["React","useWallet","ENDPOINTS","useColorMode","useConnectionConfig","notify","shortenAddress","CopyOutlined","ModalEnum","useModal","useWalletModal","Box","Button","Collapse","Divider","Drawer","FormControl","Link","List","ListItem","ListItemText","ListItemButton","MenuItem","Select","Stack","useTheme","AccountBalanceWalletIcon","Brightness4Icon","Brightness7Icon","ExpandLess","ExpandMore","Settings","narrow","disconnect","publicKey","setEndpoint","env","endpoint","setVisible","open","useCallback","setModal","theme","colorModeCtx","handleConnect","WALLET","connectedActions","click","navigator","clipboard","writeText","toBase58","message","description","innerNarrow","inner","ConnectedWalletCopyC","catch","expandedExtra","color","variant","drawerOpen","setDrawerOpen","useState","envCollapseOpen","setEnvCollapseOpen","hackySkipSet","toggleDrawer","event","type","key","target","classList","contains","drawerC","width","themeSwitch","ml","toggleColorMode","palette","mode","listHead","fontSize","fontWeight","letterSpacing","map","p","pl","name","a","idx","display","justifyContent","alignItems","marginRight","minWidth","e","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { ENDPOINTS, useColorMode, useConnectionConfig } from \"../../contexts\";\r\nimport { notify, shortenAddress } from \"@oyster/common\";\r\nimport { CopyOutlined } from \"@ant-design/icons\";\r\nimport { ModalEnum, useModal, useWalletModal } from \"../../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Collapse,\r\n  Divider,\r\n  Drawer,\r\n  FormControl,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemButton,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\n\r\nexport const Settings = ({ narrow } : { narrow : boolean }) => {\r\n  const { disconnect, publicKey } = useWallet();\r\n  const { setEndpoint, env, endpoint } = useConnectionConfig();\r\n  const { setVisible } = useWalletModal();\r\n  const open = React.useCallback(() => setVisible(true), [setVisible]);\r\n  const { setModal } = useModal();\r\n  const theme = useTheme();\r\n  const colorModeCtx = useColorMode();\r\n\r\n  const handleConnect = React.useCallback(() => {\r\n    setModal(ModalEnum.WALLET);\r\n    setVisible(true);\r\n  }, [setModal, setVisible]);\r\n\r\n  const connectedActions = [\r\n    {\r\n      click: async () => {\r\n        if (publicKey) {\r\n          await navigator.clipboard.writeText(publicKey.toBase58());\r\n          notify({\r\n            message: \"Wallet update\",\r\n            description: \"Address copied to clipboard\",\r\n          });\r\n        }\r\n      },\r\n      innerNarrow: () => (\r\n        `Copy Address (${publicKey && shortenAddress(publicKey.toBase58())})`\r\n      ),\r\n      inner: function ConnectedWalletCopyC() {\r\n        return (\r\n          <React.Fragment>\r\n            <CopyOutlined />\r\n            {publicKey && shortenAddress(publicKey.toBase58())}\r\n          </React.Fragment>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      click: open,\r\n      inner: () => \"Change\\u00A0Wallet\",\r\n    },\r\n    {\r\n      click: () => disconnect().catch(),\r\n      inner: () => `Disconnect\\u00A0(${env})`,\r\n      expandedExtra: { // these are interepreted as props. TODO: specific types\r\n        color: \"error\" as any,\r\n        variant: \"contained\" as any,\r\n      }\r\n    },\r\n  ];\r\n\r\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n  const [envCollapseOpen, setEnvCollapseOpen] = React.useState(false);\r\n\r\n  const hackySkipSet = \"hackySkipSet\";\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    if (event.target.classList.contains(hackySkipSet)) {\r\n      return;\r\n    }\r\n\r\n    setDrawerOpen(open);\r\n  };\r\n\r\n  const drawerC = (inner) => {\r\n    return (\r\n      <React.Fragment>\r\n        <Button onClick={toggleDrawer(true)}>\r\n          <AccountBalanceWalletIcon />\r\n        </Button>\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={drawerOpen}\r\n          onClose={toggleDrawer(false)}\r\n        >\r\n          <Box\r\n            sx={{ width: 250 }}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(false)}\r\n            onKeyDown={toggleDrawer(false)}\r\n          >\r\n            {inner}\r\n          </Box>\r\n        </Drawer>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const themeSwitch = (\r\n    <Button\r\n      sx={{ ml: 1 }}\r\n      onClick={colorModeCtx.toggleColorMode}\r\n      color=\"inherit\"\r\n    >\r\n      {theme.palette.mode === \"dark\" ? (\r\n        <Brightness7Icon />\r\n      ) : (\r\n        <Brightness4Icon />\r\n      )}\r\n    </Button>\r\n  );\r\n\r\n  if (narrow) {\r\n    const listHead = (\r\n      <ListItem>\r\n        <ListItemText\r\n          primary=\"Wallet\"\r\n          primaryTypographyProps={{\r\n            fontSize: \"1.2rem\",\r\n            fontWeight: 'medium',\r\n            letterSpacing: 0,\r\n          }}\r\n        />\r\n      </ListItem>\r\n    );\r\n    return (\r\n      <React.Fragment>\r\n        {!publicKey && drawerC(\r\n          <List>\r\n            {listHead}\r\n            <Divider />\r\n            <ListItemButton\r\n              onClick={() => setEnvCollapseOpen(!envCollapseOpen)}\r\n              className={hackySkipSet}\r\n            >\r\n              Change Network\r\n              {envCollapseOpen ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={envCollapseOpen} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                {ENDPOINTS.map(p => (\r\n                  <ListItemButton\r\n                    selected={endpoint === p.endpoint}\r\n                    onClick={() => setEndpoint(p.endpoint)}\r\n                    key={p.name}\r\n                    sx={{ pl: 4 }}\r\n                    className={hackySkipSet}\r\n                  >\r\n                    {p.name}\r\n                  </ListItemButton>\r\n                ))}\r\n              </List>\r\n            </Collapse>\r\n            <ListItemButton onClick={handleConnect}>\r\n              Connect\r\n            </ListItemButton>\r\n          </List>\r\n        )}\r\n        {publicKey && drawerC(\r\n          <List>\r\n            {listHead}\r\n            <Divider />\r\n            {connectedActions.map((a, idx) => {\r\n              return (\r\n                <ListItemButton onClick={a.click} key={idx}>\r\n                  {(a.innerNarrow && a.innerNarrow()) || a.inner()}\r\n                </ListItemButton>\r\n              );\r\n            })}\r\n          </List>\r\n        )}\r\n        {themeSwitch}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Stack\r\n        direction=\"row\"\r\n        spacing={2}\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n          alignItems: \"center\",\r\n          marginRight: \"36px\",\r\n        }}\r\n      >\r\n        {!publicKey && (\r\n          <React.Fragment>\r\n            <FormControl variant=\"standard\" style={{minWidth: \"10ch\"}}>\r\n              <Select\r\n                id=\"connected-env-select\"\r\n                onChange={(e) => { setEndpoint(e.target.value); }}\r\n                value={endpoint}\r\n              >\r\n                {ENDPOINTS.map(({ name, endpoint }) => (\r\n                  <MenuItem key={name} value={endpoint}>{name}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <Link underline=\"none\">\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleConnect}\r\n              >\r\n                Connect\r\n              </Button>\r\n            </Link>\r\n          </React.Fragment>\r\n        )}\r\n        {publicKey && connectedActions.map((a, idx) => {\r\n            return (\r\n              <Button\r\n                key={idx}\r\n                variant=\"outlined\"\r\n                onClick={a.click}\r\n                {...a.expandedExtra}\r\n              >\r\n                {a.inner()}\r\n              </Button>\r\n            );\r\n          })\r\n        }\r\n        {themeSwitch}\r\n      </Stack>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}