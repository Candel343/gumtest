{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventEmitter = exports.MarketUpdateEvent = exports.CacheDeleteEvent = exports.CacheUpdateEvent = void 0;\n\nconst eventemitter3_1 = require(\"eventemitter3\");\n\nclass CacheUpdateEvent {\n  constructor(id, isNew, parser, isActive) {\n    this.id = id;\n    this.parser = parser;\n    this.isNew = isNew;\n    this.isActive = isActive;\n  }\n\n}\n\nexports.CacheUpdateEvent = CacheUpdateEvent;\nCacheUpdateEvent.type = 'CacheUpdate';\n\nclass CacheDeleteEvent {\n  constructor(id) {\n    this.id = id;\n  }\n\n}\n\nexports.CacheDeleteEvent = CacheDeleteEvent;\nCacheDeleteEvent.type = 'CacheUpdate';\n\nclass MarketUpdateEvent {\n  constructor(ids) {\n    this.ids = ids;\n  }\n\n}\n\nexports.MarketUpdateEvent = MarketUpdateEvent;\nMarketUpdateEvent.type = 'MarketUpdate';\n\nclass EventEmitter {\n  constructor() {\n    this.emitter = new eventemitter3_1.EventEmitter();\n  }\n\n  onMarket(callback) {\n    this.emitter.on(MarketUpdateEvent.type, callback);\n    return () => this.emitter.removeListener(MarketUpdateEvent.type, callback);\n  }\n\n  onCache(callback) {\n    this.emitter.on(CacheUpdateEvent.type, callback);\n    return () => this.emitter.removeListener(CacheUpdateEvent.type, callback);\n  }\n\n  raiseMarketUpdated(ids) {\n    this.emitter.emit(MarketUpdateEvent.type, new MarketUpdateEvent(ids));\n  }\n\n  raiseCacheUpdated(id, isNew, parser, isActive) {\n    this.emitter.emit(CacheUpdateEvent.type, new CacheUpdateEvent(id, isNew, parser, isActive));\n  }\n\n  raiseCacheDeleted(id) {\n    this.emitter.emit(CacheDeleteEvent.type, new CacheDeleteEvent(id));\n  }\n\n}\n\nexports.EventEmitter = EventEmitter;","map":{"version":3,"sources":["../../../src/utils/eventEmitter.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,MAAa,gBAAb,CAA6B;AAM3B,EAAA,WAAA,CAAY,EAAZ,EAAwB,KAAxB,EAAwC,MAAxC,EAAqD,QAArD,EAAsE;AACpE,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,QAAL,GAAgB,QAAhB;AACD;;AAX0B;;AAA7B,OAAA,CAAA,gBAAA,GAAA,gBAAA;AACS,gBAAA,CAAA,IAAA,GAAO,aAAP;;AAaT,MAAa,gBAAb,CAA6B;AAG3B,EAAA,WAAA,CAAY,EAAZ,EAAsB;AACpB,SAAK,EAAL,GAAU,EAAV;AACD;;AAL0B;;AAA7B,OAAA,CAAA,gBAAA,GAAA,gBAAA;AACS,gBAAA,CAAA,IAAA,GAAO,aAAP;;AAOT,MAAa,iBAAb,CAA8B;AAG5B,EAAA,WAAA,CAAY,GAAZ,EAA4B;AAC1B,SAAK,GAAL,GAAW,GAAX;AACD;;AAL2B;;AAA9B,OAAA,CAAA,iBAAA,GAAA,iBAAA;AACS,iBAAA,CAAA,IAAA,GAAO,cAAP;;AAOT,MAAa,YAAb,CAAyB;AAAzB,EAAA,WAAA,GAAA;AACU,SAAA,OAAA,GAAU,IAAI,eAAA,CAAA,YAAJ,EAAV;AAiCT;;AA/BC,EAAA,QAAQ,CAAC,QAAD,EAA4C;AAClD,SAAK,OAAL,CAAa,EAAb,CAAgB,iBAAiB,CAAC,IAAlC,EAAwC,QAAxC;AAEA,WAAO,MAAM,KAAK,OAAL,CAAa,cAAb,CAA4B,iBAAiB,CAAC,IAA9C,EAAoD,QAApD,CAAb;AACD;;AAED,EAAA,OAAO,CAAC,QAAD,EAA2C;AAChD,SAAK,OAAL,CAAa,EAAb,CAAgB,gBAAgB,CAAC,IAAjC,EAAuC,QAAvC;AAEA,WAAO,MAAM,KAAK,OAAL,CAAa,cAAb,CAA4B,gBAAgB,CAAC,IAA7C,EAAmD,QAAnD,CAAb;AACD;;AAED,EAAA,kBAAkB,CAAC,GAAD,EAAiB;AACjC,SAAK,OAAL,CAAa,IAAb,CAAkB,iBAAiB,CAAC,IAApC,EAA0C,IAAI,iBAAJ,CAAsB,GAAtB,CAA1C;AACD;;AAED,EAAA,iBAAiB,CACf,EADe,EAEf,KAFe,EAGf,MAHe,EAIf,QAJe,EAIE;AAEjB,SAAK,OAAL,CAAa,IAAb,CACE,gBAAgB,CAAC,IADnB,EAEE,IAAI,gBAAJ,CAAqB,EAArB,EAAyB,KAAzB,EAAgC,MAAhC,EAAwC,QAAxC,CAFF;AAID;;AAED,EAAA,iBAAiB,CAAC,EAAD,EAAW;AAC1B,SAAK,OAAL,CAAa,IAAb,CAAkB,gBAAgB,CAAC,IAAnC,EAAyC,IAAI,gBAAJ,CAAqB,EAArB,CAAzC;AACD;;AAjCsB;;AAAzB,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventEmitter = exports.MarketUpdateEvent = exports.CacheDeleteEvent = exports.CacheUpdateEvent = void 0;\r\nconst eventemitter3_1 = require(\"eventemitter3\");\r\nclass CacheUpdateEvent {\r\n    constructor(id, isNew, parser, isActive) {\r\n        this.id = id;\r\n        this.parser = parser;\r\n        this.isNew = isNew;\r\n        this.isActive = isActive;\r\n    }\r\n}\r\nexports.CacheUpdateEvent = CacheUpdateEvent;\r\nCacheUpdateEvent.type = 'CacheUpdate';\r\nclass CacheDeleteEvent {\r\n    constructor(id) {\r\n        this.id = id;\r\n    }\r\n}\r\nexports.CacheDeleteEvent = CacheDeleteEvent;\r\nCacheDeleteEvent.type = 'CacheUpdate';\r\nclass MarketUpdateEvent {\r\n    constructor(ids) {\r\n        this.ids = ids;\r\n    }\r\n}\r\nexports.MarketUpdateEvent = MarketUpdateEvent;\r\nMarketUpdateEvent.type = 'MarketUpdate';\r\nclass EventEmitter {\r\n    constructor() {\r\n        this.emitter = new eventemitter3_1.EventEmitter();\r\n    }\r\n    onMarket(callback) {\r\n        this.emitter.on(MarketUpdateEvent.type, callback);\r\n        return () => this.emitter.removeListener(MarketUpdateEvent.type, callback);\r\n    }\r\n    onCache(callback) {\r\n        this.emitter.on(CacheUpdateEvent.type, callback);\r\n        return () => this.emitter.removeListener(CacheUpdateEvent.type, callback);\r\n    }\r\n    raiseMarketUpdated(ids) {\r\n        this.emitter.emit(MarketUpdateEvent.type, new MarketUpdateEvent(ids));\r\n    }\r\n    raiseCacheUpdated(id, isNew, parser, isActive) {\r\n        this.emitter.emit(CacheUpdateEvent.type, new CacheUpdateEvent(id, isNew, parser, isActive));\r\n    }\r\n    raiseCacheDeleted(id) {\r\n        this.emitter.emit(CacheDeleteEvent.type, new CacheDeleteEvent(id));\r\n    }\r\n}\r\nexports.EventEmitter = EventEmitter;\r\n//# sourceMappingURL=eventEmitter.js.map"]},"metadata":{},"sourceType":"script"}